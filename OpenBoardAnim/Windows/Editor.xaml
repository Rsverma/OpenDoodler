<Window x:Class="OpenBoardAnim.Windows.Editor" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:n="clr-namespace:OpenBoardAnim.Controls"
        xmlns:l="clr-namespace:OpenBoardAnim.Windows"
        xmlns:u="clr-namespace:OpenBoardAnim.Util"
        xmlns:h="clr-namespace:OpenBoardAnim.Helpers"
        xmlns:c="clr-namespace:OpenBoardAnim.Util.Converters"
        x:Name="EditorWindow" Title="{DynamicResource Editor.Title}" MinHeight="500" MinWidth="700" Background="#FFF1F1F1" UseLayoutRounding="True"
        Left="{Binding Source={x:Static h:Settings.Default}, Path=EditorLeft, Mode=TwoWay}" Top="{Binding Source={x:Static h:Settings.Default}, Path=EditorTop, Mode=TwoWay}"
        Height="{Binding Source={x:Static h:Settings.Default}, Path=EditorHeight}" Width="{Binding Source={x:Static h:Settings.Default}, Path=EditorWidth}"
        Icon="/Resources/App.ico" Loaded="Window_Loaded" Closing="Window_Closing" Activated="Window_Activated" KeyUp="Window_KeyUp"
        FocusManager.FocusedElement="{Binding RelativeSource={x:Static RelativeSource.Self}, Mode=OneTime}" Deactivated="EditorWindow_Deactivated">

    <Window.Resources>
        <c:DoubleToInt x:Key="DoubleToIntConverter"/>
        <c:InvertedBool x:Key="InvertedBoolConverter"/>
        <c:InvertedVisibility x:Key="InvertedVisibilityConverter"/>
        <c:MaximumValue x:Key="MaximumValueConverter"/>
        <c:DoubleTimesAHundredToInt x:Key="DoubleTimesAHundredToIntConverter"/>
        <c:UriToBitmap x:Key="UriToBitmapConverter"/>
        <c:PathToFilename x:Key="PathToFilenameConverter"/>
        <c:DoubleToThickness x:Key="DoubleToThicknessConverter"/>
        <c:SelectionToEditingMode x:Key="SelectionToEditingModeConverter"/>
        <c:SelectionToDrawingAttributes x:Key="SelectionToDrawingAttributesConverter"/>
        <c:SelectionToStylusShape x:Key="SelectionToStylusShapeConverter"/>
        <c:StylusTipToBool x:Key="StylusTipToBoolConverter"/>
        <c:RoutedCommandToInputGestureTextConverter x:Key="CommandToInputGestureTextConverter"/>
        <c:FontToSupportedGliph x:Key="FontToSupportedGliphConverter"/>
        <c:SourceToSize x:Key="SourceToSizeConverter"/>
        <c:InvertedBool x:Key="InvertedBool"/>
        <c:InvertedBoolToVisibility x:Key="InvertedBoolToVisibility"/>
        <c:EnumToBool x:Key="EnumToBool"/>
        <c:EnumToVisibility x:Key="EnumToVisibility"/>

        <Storyboard x:Key="ShowPanelStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.MinWidth)" From="0" To="240" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Width)" From="0" To="240" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="0" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="ShowExtendedPanelStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.MinWidth)" From="0" To="280" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Width)" From="0" To="280" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="0" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HidePanelStoryboard">
            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="IsHitTestVisible" Duration="0:0:0" >
                <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0"/>
            </BooleanAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.MinWidth)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Width)" From="{Binding ElementName=ActionGrid,Path=ActualWidth}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation Storyboard.TargetName="ActionGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=ActionGrid,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HideWelcomeBorderStoryboard">
            <DoubleAnimation Storyboard.TargetName="WelcomeGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=WelcomeGrid,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WelcomeGrid" Storyboard.TargetProperty="Visibility" Duration="0:0:1" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:1"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ShowWelcomeBorderStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="WelcomeGrid" Storyboard.TargetProperty="Visibility" Duration="0:0:0" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="WelcomeGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="0" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <Storyboard x:Key="HideOverlayGridStoryboard">
            <DoubleAnimation Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="{Binding ElementName=OverlayGrid,Path=Opacity}" To="0" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>

            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="Visibility" Duration="0:0:1" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0:0:1"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="ShowOverlayGridStoryboard">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="Visibility" Duration="0:0:0" >
                <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0"/>
            </ObjectAnimationUsingKeyFrames>

            <DoubleAnimation Storyboard.TargetName="OverlayGrid" Storyboard.TargetProperty="(Grid.Opacity)" From="0" To="1" Duration="0:0:1">
                <DoubleAnimation.EasingFunction>
                    <PowerEase Power="8" />
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <CollectionViewSource x:Key="MyFonts" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}, Converter={StaticResource FontToSupportedGliphConverter}}">
            <CollectionViewSource.SortDescriptions>
                <cm:SortDescription PropertyName="Source" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <Style x:Key="FontStyle">
            <Setter Property="Control.FontFamily" Value="{Binding .}" />
            <Setter Property="Control.FontSize" Value="16" />
        </Style>

        <DataTemplate x:Key="FontTemplate">
            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                <TextBlock Style="{StaticResource FontStyle}" Text="{Binding .}" ToolTip="{Binding Path=.Source}" />
            </VirtualizingStackPanel>
        </DataTemplate>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="u:Commands.NewAnimation" CanExecute="NewRecording_CanExecute" Executed="NewAnimation_Executed"/>
        <CommandBinding Command="u:Commands.NewFromMediaProject" CanExecute="NewRecording_CanExecute" Executed="NewFromMediaProject_Executed"/>

        <CommandBinding Command="u:Commands.InsertFromMedia" CanExecute="Insert_CanExecute" Executed="InsertFromMedia_Executed"/>

        <CommandBinding Command="u:Commands.SaveAs" CanExecute="File_CanExecute" Executed="SaveAs_Executed"/>
        <CommandBinding Command="u:Commands.SaveAsProject" CanExecute="File_CanExecute" Executed="SaveAsProject_Executed"/>
        <CommandBinding Command="u:Commands.DiscardProject" CanExecute="File_CanExecute" Executed="DiscardProject_Executed"/>

        <CommandBinding Command="u:Commands.FirstFrame" CanExecute="Playback_CanExecute" Executed="FirstFrame_Executed"/>
        <CommandBinding Command="u:Commands.PreviousFrame" CanExecute="Playback_CanExecute" Executed="PreviousFrame_Executed"/>
        <CommandBinding Command="u:Commands.Play" CanExecute="Playback_CanExecute" Executed="Play_Executed"/>
        <CommandBinding Command="u:Commands.NextFrame" CanExecute="Playback_CanExecute" Executed="NextFrame_Executed"/>
        <CommandBinding Command="u:Commands.LastFrame" CanExecute="Playback_CanExecute" Executed="LastFrame_Executed"/>

        <CommandBinding Command="u:Commands.Zoom100" CanExecute="Zoom_CanExecute" Executed="Zoom100_Executed"/>
        <CommandBinding Command="u:Commands.FitImage" CanExecute="Zoom_CanExecute" Executed="FitImage_Executed"/>

        <CommandBinding Command="Undo" CanExecute="Undo_CanExecute" Executed="Undo_Executed"/>
        <CommandBinding Command="u:Commands.Reset" CanExecute="Reset_CanExecute" Executed="Reset_Executed"/>
        <CommandBinding Command="Redo" CanExecute="Redo_CanExecute" Executed="Redo_Executed"/>

        <CommandBinding Command="Cut" CanExecute="ClipBoard_CanExecute" Executed="Cut_Executed"/>
        <CommandBinding Command="Copy" CanExecute="ClipBoard_CanExecute" Executed="Copy_Executed"/>
        <CommandBinding Command="Paste" CanExecute="Paste_CanExecute" Executed="Paste_Executed"/>
        <CommandBinding Command="u:Commands.ExploreClipboard" CanExecute="ClipBoardSelection_CanExecute" Executed="ExploreClipBoard_Executed"/>
        <CommandBinding Command="u:Commands.RemoveClipboardEntry" CanExecute="ClipBoardSelection_CanExecute" Executed="RemoveClipboard_Executed"/>

        <CommandBinding Command="Delete" CanExecute="Delete_CanExecute" Executed="Delete_Executed"/>
        <CommandBinding Command="u:Commands.DeletePrevious" CanExecute="DeletePrevious_CanExecute" Executed="DeletePrevious_Executed"/>
        <CommandBinding Command="u:Commands.DeleteNext" CanExecute="DeleteNext_CanExecute" Executed="DeleteNext_Executed"/>

        <CommandBinding Command="u:Commands.Reverse" CanExecute="Reordering_CanExecute" Executed="Reverse_Executed"/>
        <CommandBinding Command="u:Commands.Yoyo" CanExecute="Reordering_CanExecute" Executed="Yoyo_Executed"/>
        <CommandBinding Command="u:Commands.MoveLeft" CanExecute="Reordering_CanExecute" Executed="MoveLeft_Executed"/>
        <CommandBinding Command="u:Commands.MoveRight" CanExecute="Reordering_CanExecute" Executed="MoveRight_Executed"/>

        <CommandBinding Command="u:Commands.Resize" CanExecute="Image_CanExecute" Executed="Resize_Executed"/>
        <CommandBinding Command="u:Commands.Crop" CanExecute="Image_CanExecute" Executed="Crop_Executed"/>
        <CommandBinding Command="u:Commands.FlipRotate" CanExecute="Image_CanExecute" Executed="FlipRotate_Executed"/>

        <CommandBinding Command="u:Commands.Caption" CanExecute="Image_CanExecute" Executed="Caption_Executed"/>
        <CommandBinding Command="u:Commands.FreeText" CanExecute="Image_CanExecute" Executed="FreeText_Executed"/>
        <CommandBinding Command="u:Commands.TitleFrame" CanExecute="Image_CanExecute" Executed="TitleFrame_Executed"/>

        <CommandBinding Command="u:Commands.FreeDrawing" CanExecute="Image_CanExecute" Executed="FreeDrawing_Executed"/>
        <CommandBinding Command="u:Commands.Watermark" CanExecute="Image_CanExecute" Executed="Watermark_Executed"/>
        <CommandBinding Command="u:Commands.Border" CanExecute="Image_CanExecute" Executed="Border_Executed"/>
        <CommandBinding Command="u:Commands.Cinemagraph" CanExecute="Image_CanExecute" Executed="Cinemagraph_Executed"/>
        <CommandBinding Command="u:Commands.Progress" CanExecute="Image_CanExecute" Executed="Progress_Executed"/>

        <CommandBinding Command="u:Commands.SelectAll" CanExecute="Selection_CanExecute" Executed="SelectAll_Executed"/>
        <CommandBinding Command="u:Commands.GoTo" CanExecute="Selection_CanExecute" Executed="GoTo_Executed"/>
        <CommandBinding Command="u:Commands.InverseSelection" CanExecute="Selection_CanExecute" Executed="InverseSelection_Executed"/>
        <CommandBinding Command="u:Commands.Unselect" CanExecute="Image_CanExecute" Executed="DeselectAll_Executed"/>

        <CommandBinding Command="u:Commands.Fade" CanExecute="Transition_CanExecute" Executed="Fade_Executed"/>
        <CommandBinding Command="u:Commands.Slide" CanExecute="Transition_CanExecute" Executed="Slide_Executed"/>

        <CommandBinding Command="u:Commands.OverrideDelay" CanExecute="Image_CanExecute" Executed="OverrideDelay_Executed"/>
        <CommandBinding Command="u:Commands.ChangeDelay" CanExecute="Image_CanExecute" Executed="ChangeDelay_Executed"/>

        <CommandBinding Command="u:Commands.OpenImage" CanExecute="ListFramesSelection_CanExecute" Executed="OpenImage_Executed"/>
    </Window.CommandBindings>

    <Window.TaskbarItemInfo>
        <TaskbarItemInfo Description="{DynamicResource Editor.Title}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo x:Name="NewRecordingThumbButton" Command="u:Commands.NewRecording" DismissWhenClicked="True" 
                                     Description="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                     CommandTarget="{Binding ElementName=NewRecordingButton}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,50,50"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Brush>
                                            <VisualBrush Visual="{StaticResource Vector.Record.New}" Stretch="Uniform"/>
                                        </GeometryDrawing.Brush>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>
                    <ThumbButtonInfo x:Name="NewWebcamRecordingThumbButton" Command="u:Commands.NewWebcamRecording" DismissWhenClicked="True" 
                                     Description="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                     CommandTarget="{Binding ElementName=NewWebcamRecordingButton}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,50,50"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Brush>
                                            <VisualBrush Visual="{StaticResource Vector.Camera.New}" Stretch="Uniform"/>
                                        </GeometryDrawing.Brush>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>
                    <ThumbButtonInfo x:Name="NewFromMediaProjectThumbInfo" Command="u:Commands.NewFromMediaProject" DismissWhenClicked="True" 
                                     Description="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                     CommandTarget="{Binding ElementName=OpenMediaProjectButton}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,50,50"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Brush>
                                            <VisualBrush Visual="{StaticResource Vector.Open}" Stretch="Uniform"/>
                                        </GeometryDrawing.Brush>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>

                    <ThumbButtonInfo Visibility="Hidden"/>

                    <ThumbButtonInfo x:Name="DiscardThumbInfo" Command="u:Commands.DiscardProject" DismissWhenClicked="True" 
                                     Description="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                     CommandTarget="{Binding ElementName=DiscardProjectButton}">
                        <ThumbButtonInfo.ImageSource>
                            <DrawingImage>
                                <DrawingImage.Drawing>
                                    <GeometryDrawing>
                                        <GeometryDrawing.Geometry>
                                            <RectangleGeometry Rect="0,0,50,50"/>
                                        </GeometryDrawing.Geometry>
                                        <GeometryDrawing.Brush>
                                            <VisualBrush Visual="{StaticResource Vector.Remove}" Stretch="Uniform"/>
                                        </GeometryDrawing.Brush>
                                    </GeometryDrawing>
                                </DrawingImage.Drawing>
                            </DrawingImage>
                        </ThumbButtonInfo.ImageSource>
                    </ThumbButtonInfo>
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--To hide the black background-->
        <Grid Grid.Row="0" Grid.RowSpan="5" Background="#FFFAFAFA" Margin="0,100,0,0"/>

        <n:HideableTabControl Grid.Row="0" x:Name="RibbonTabControl" Margin="0,5,0,0" Effect="{StaticResource Shadow.Border.Tiny}" FontSize="13" IsTabStop="False" Focusable="False">
            <n:AwareTabItem Header="{DynamicResource Editor.File}" IsSelected="True">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA" Effect="{StaticResource Shadow.Invariant}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Content="{DynamicResource Editor.File.New}" 
							   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
							   FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Column="0" Grid.Row="0" x:Name="NewRecordingButton" Text="{DynamicResource Editor.File.New.Recording}" Content="{StaticResource Vector.Record.New}" 
							           Margin="0"  MinWidth="60" MaxSize="30" VerticalContentAlignment="Top"
							           Command="u:Commands.NewRecording"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        <n:ImageButton Grid.Column="1" Grid.Row="0" x:Name="NewWebcamRecordingButton" Text="{DynamicResource Editor.File.New.Webcam}" Content="{StaticResource Vector.Camera.New}" 
							           Margin="0" MinWidth="60" MaxSize="30" VerticalContentAlignment="Top"
							           Command="u:Commands.NewWebcamRecording"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        <!--<n:ImageButton Grid.Column="2" Grid.Row="0" x:Name="NewBoardButton" Text="{DynamicResource Editor.File.New.Board}" Content="{StaticResource Vector.Board.New}" 
							           Margin="0" MinWidth="60" MaxSize="27" VerticalContentAlignment="Top" Visibility="Collapsed"
							           Command="util:Commands.NewBoardRecording" 
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>-->
                        <n:ImageButton Grid.Column="2" Grid.Row="0" x:Name="NewAnimationButton" Text="{DynamicResource Editor.File.Blank}" Content="{StaticResource Vector.File.New}" 
							           Margin="0" MinWidth="60" MaxSize="27" VerticalContentAlignment="Top"
							           Command="u:Commands.NewAnimation" 
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        <n:ImageButton Grid.Column="3" Grid.Row="0" x:Name="OpenMediaProjectButton" Text="{DynamicResource Editor.File.New.MediaProject}" Content="{StaticResource Vector.Open}" 
							           Margin="0" MinWidth="60" MaxSize="30" VerticalContentAlignment="Top"
							           Command="u:Commands.NewFromMediaProject"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="2" Margin="0,1,0,0"
                          IsEnabled="{Binding FilledList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:Editor}}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Content="{DynamicResource Editor.File.Insert}" 
							   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
							   FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Column="0" Grid.Row="0" x:Name="InsertRecordingButton" Text="{DynamicResource Editor.File.Insert.Recording}" Content="{StaticResource Vector.Record.Add}" 
							           Margin="0" MaxSize="30" VerticalContentAlignment="Top"
							           Command="u:Commands.InsertRecording"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="1" Grid.Row="0" x:Name="InsertWebcamRecordingButton" Text="{DynamicResource Editor.File.Insert.Webcam}" Content="{StaticResource Vector.Camera.Add}" 
							           Margin="0" MaxSize="30" VerticalContentAlignment="Top"
							           Command="u:Commands.InsertWebcamRecording"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="2" Grid.Row="0" x:Name="InsertImageButton" Text="{DynamicResource Editor.File.Insert.Media}"  Content="{StaticResource Vector.Open}" 
							           Margin="0" MaxSize="30" VerticalContentAlignment="Top" 
							           Command="u:Commands.InsertFromMedia"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="3" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="4" Margin="0,1,0,0"
                          IsEnabled="{Binding FilledList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:Editor}}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Content="{DynamicResource Editor.File}" 
							   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
							   FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Column="0" Grid.Row="0" x:Name="SaveButton" Text="{DynamicResource Editor.File.Save}" Content="{StaticResource Vector.Save}" 
							           Margin="0" MaxSize="30" VerticalContentAlignment="Top" Command="u:Commands.SaveAs"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="1" Grid.Row="0" x:Name="SaveProjectButton" Text="{DynamicResource Editor.File.SaveProject}" Content="{StaticResource Vector.Save.Project}" 
							           Margin="0" MinWidth="60" MaxSize="30" VerticalContentAlignment="Top" Command="u:Commands.SaveAsProject"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="2" Grid.Row="0" x:Name="DiscardProjectButton" Text="{DynamicResource Editor.File.Discard}" Content="{StaticResource Vector.Remove}" 
							           Margin="0" MaxSize="30" VerticalContentAlignment="Top"
							           Command="u:Commands.DiscardProject"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="5" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.View}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA" Effect="{StaticResource Shadow.Invariant}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Content="{DynamicResource Editor.View.Playback}" 
							   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
							   FontSize="12" Foreground="#FF707070"/>

                        <n:ImageRepeatButton Grid.Column="0" Grid.Row="0" x:Name="PreviousButton" Text="{DynamicResource Editor.View.Previous}" Content="{StaticResource Vector.Backward.Bold}" 
							                 Margin="0" MaxSize="30" VerticalContentAlignment="Top"
							                 Command="u:Commands.PreviousFrame" 
                                             ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                             ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        <n:ImageButton Grid.Column="1" Grid.Row="0" x:Name="PlayButton" Text="{DynamicResource Editor.View.Play}" Content="{StaticResource Vector.Play}" 
							           Margin="0" MaxSize="30" VerticalContentAlignment="Top"
							           Command="u:Commands.Play"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        <n:ImageRepeatButton Grid.Column="2" Grid.Row="0" x:Name="NextButton" Text="{DynamicResource Editor.View.Next}" Content="{StaticResource Vector.Forward.Bold}" 
							                 Margin="0" MaxSize="30" VerticalContentAlignment="Top"
							                 Command="u:Commands.NextFrame"
                                             ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                             ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="2" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Content="{DynamicResource Editor.View.Zoom}" 
							   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
							   FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Column="0" Grid.Row="0" x:Name="Zoom100Button" Text="100%" Content="{StaticResource Vector.Fit}" 
							           Margin="0" Padding="3,3,3,0" MaxSize="30" VerticalContentAlignment="Top"
							           Command="u:Commands.Zoom100" 
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Column="1" Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <!--<RowDefinition/>-->
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,5" IsEnabled="{Binding ElementName=Zoom100Button, Path=IsEnabled}">
                                <Viewbox Child="{StaticResource Vector.Zoom}" MaxWidth="35" MaxHeight="35" Style="{StaticResource ViewBoxStyle}"/>
                                <n:NumericUpDown x:Name="ZoomNumericUpDown"
                                    Value="{Binding Zoom, Converter={StaticResource IntToDecimalConverter}, ElementName=ZoomBoxControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Minimum="5" Maximum="500" Margin="5,0,0,0" MinWidth="60"/>
                                <Label Content="%" VerticalContentAlignment="Center" Padding="5,0"/>
                            </StackPanel>

                            <n:ImageButton Grid.Column="0" Grid.Row="1" x:Name="FitButton" Text="{DynamicResource Editor.View.FitImage}" Content="{StaticResource Vector.PictureFit}" 
							               Margin="0" Padding="2" MinWidth="60" MaxSize="35" VerticalContentAlignment="Center"
							               Command="u:Commands.FitImage" 
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        </Grid>
                    </Grid>

                    <Separator Grid.Column="3" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.Edit}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Content="{DynamicResource Editor.Edit.ActionStack}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton x:Name="UndoButton" Grid.Row="0" Grid.Column="0" Text="{DynamicResource Editor.Edit.Undo}" Content="{StaticResource Vector.Undo}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="Undo"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="ResetButton" Grid.Row="0" Text="{DynamicResource Editor.Edit.Reset}" Content="{StaticResource Vector.Repeat}"
                                           Margin="0" Padding="2" MinWidth="60" MaxSize="25" VerticalContentAlignment="Center"
						                   Command="u:Commands.Reset"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="RedoButton" Grid.Row="1" Text="{DynamicResource Editor.Edit.Redo}" Content="{StaticResource Vector.Redo}"
                                           Margin="0" Padding="2" MinWidth="60" MaxSize="25" VerticalContentAlignment="Center"
						                   Command="Redo"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="2" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Content="{DynamicResource Editor.Edit.Clipboard}" 
						           HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						           FontSize="12" Foreground="#FF707070"/>

                            <n:ImageButton Grid.Column="1" x:Name="ShowClipboardButton" Content="{StaticResource Vector.Launcher}"
						                   Margin="0,0,-2,-2" MinWidth="10" Padding="5,0" MaxSize="8" Click="ShowClipboardButton_Click" 
                                           ToolTip="{DynamicResource Editor.Edit.ShowClipboard}" ToolTipService.Placement="Bottom"/>
                        </Grid>

                        <n:ImageButton Grid.Row="0" Grid.Column="0" x:Name="PasteButton" Text="{DynamicResource Editor.Edit.Paste}" Content="{StaticResource Vector.Paste}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="Paste"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="CopyButton" Grid.Row="0" Grid.Column="0" Text="{DynamicResource Editor.Edit.Copy}" Content="{StaticResource Vector.Copy}"
						                   Margin="0" Padding="2" MinWidth="60" MaxSize="28" VerticalContentAlignment="Center"
						                   Command="Copy"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="CutButton" Grid.Row="1" Text="{DynamicResource Editor.Edit.Cut}" Content="{StaticResource Vector.Cut}"
						                   Margin="0" Padding="2" MinWidth="60" MaxSize="28" VerticalContentAlignment="Center"
						                   Command="Cut"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="3" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="4" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Content="{DynamicResource Editor.Edit.Frames}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="0" x:Name="DeleteButton" Text="{DynamicResource Editor.Edit.Delete}" Content="{StaticResource Vector.RemoveImage}"
                                       Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="Delete"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="DeleteBeforeButton" Grid.Row="0" Text="{DynamicResource Editor.Edit.DeletePrevious}" Content="{StaticResource Vector.Delete.Before}"
						                   Margin="0" Padding="3,3,3,0" MinWidth="60" MaxSize="30" VerticalContentAlignment="Center"
						                   Command="u:Commands.DeletePrevious"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="DeleteAfterButton" Grid.Row="1" Text="{DynamicResource Editor.Edit.DeleteNext}" Content="{StaticResource Vector.Delete.After}"
                                           Margin="0" Padding="3,3,3,0" MinWidth="60" MaxSize="30" VerticalContentAlignment="Center"
						                   Command="u:Commands.DeleteNext"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="5" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="6" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" Content="{DynamicResource Editor.Edit.Reordering}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <Grid Grid.Row="0" Grid.Column="0">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="ReverseOrderButton" Grid.Row="0" Text="{DynamicResource Editor.Edit.Reverse}" Content="{StaticResource Vector.Invert}"
						                   Margin="0" Padding="3,3,3,0" MaxSize="30" VerticalContentAlignment="Center"
						                   Command="u:Commands.Reverse"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="YoyoOrderButton" Grid.Row="1" Text="{DynamicResource Editor.Edit.Yoyo}" Content="{StaticResource Vector.Yoyo}"
						                   Margin="0" Padding="3,3,3,0" MaxSize="30" VerticalContentAlignment="Center"
						                   Command="u:Commands.Yoyo"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>

                        <n:ImageButton x:Name="MoveLeftButton" Grid.Row="0" Grid.Column="1" Text="{DynamicResource Editor.Edit.MoveLeft}" Content="{StaticResource Vector.MoveLeft}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="u:Commands.MoveLeft"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton x:Name="MoveRightButton" Grid.Row="0" Grid.Column="2" Text="{DynamicResource Editor.Edit.MoveRight}" Content="{StaticResource Vector.MoveRight}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="u:Commands.MoveRight"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="7" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.Image}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" x:Name="ResizeLabel" Content="{DynamicResource Editor.Image.SizePosition}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton x:Name="ResizeButton" Grid.Row="0" Grid.Column="0" Text="{DynamicResource Editor.Image.Resize}" Content="{StaticResource Vector.Resize}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="u:Commands.Resize"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="CropButton" Grid.Row="0" Text="{DynamicResource Editor.Image.Crop}" Content="{StaticResource Vector.Crop}"
                                           Margin="0" Padding="2" MinWidth="60" MaxSize="25" VerticalContentAlignment="Center"
						                   Command="u:Commands.Crop"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="FlipRotateButton" Grid.Row="1" Text="{DynamicResource Editor.Image.FlipRotate}" Content="{StaticResource Vector.FlipHorizontal}"
                                           Margin="0" Padding="2" MinWidth="60" MaxSize="25" VerticalContentAlignment="Center"
						                   Command="u:Commands.FlipRotate"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="2" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Content="{DynamicResource Editor.Image.Text}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton x:Name="CaptionButton" Grid.Row="0" Grid.Column="0" Text="{DynamicResource Editor.Image.Caption}" Content="{StaticResource Vector.Caption}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="u:Commands.Caption"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="FreeTextButton" Grid.Row="0" Text="{DynamicResource Editor.Image.FreeText}" Content="{StaticResource Vector.FreeText}"
                                           Margin="0" Padding="2" MinWidth="60" MaxSize="25" VerticalContentAlignment="Center"
						                   Command="u:Commands.FreeText"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="TitleFrameButton" Grid.Row="1" Text="{DynamicResource Editor.Image.TitleFrame}" Content="{StaticResource Vector.TitleFrame}"
                                           Margin="0" Padding="2" MinWidth="60" MaxSize="25" VerticalContentAlignment="Center"
						                   Command="u:Commands.TitleFrame"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="3" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="4" Margin="0,1,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="4" Content="{DynamicResource Editor.Image.Overlay}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton x:Name="FreeDrawButton" Grid.Row="0" Grid.Column="0" Text="{DynamicResource Editor.Image.FreeDrawing}" Content="{StaticResource Vector.FreeDrawing}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="u:Commands.FreeDrawing"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton x:Name="ProgressButton" Grid.Row="0" Grid.Column="1" Text="{DynamicResource Editor.Image.Progress}" Content="{StaticResource Vector.Progress}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="u:Commands.Progress"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <Grid Grid.Row="0" Grid.Column="2">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="WatermarkButton" Grid.Row="0" Text="{DynamicResource Editor.Image.Watermark}" Content="{StaticResource Vector.Watermark}"
                                           Margin="0" Padding="2" MinWidth="60" MaxSize="25" VerticalContentAlignment="Center"
						                   Command="u:Commands.Watermark"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="CinemagraphButton" Grid.Row="1" Text="{DynamicResource Editor.Image.Cinemagraph}" Content="{StaticResource Vector.Cinemagraph}"
						                   Margin="0" Padding="2" MinWidth="60" MaxSize="25" VerticalContentAlignment="Center"
						                   Command="u:Commands.Cinemagraph"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>

                        <n:ImageButton Grid.Row="0" Grid.Column="3" x:Name="BorderButton" Text="{DynamicResource Editor.Image.Border}" Content="{StaticResource Vector.Border}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="u:Commands.Border"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="5" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="6" Margin="0,1,0,0" Visibility="Collapsed">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Content="Filters" Padding="0" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="12" Foreground="#FF707070"/>

                        <n:DropDownButton Grid.Row="0" Grid.Column="0" x:Name="FilterButton"  Description="Filters" Content="{StaticResource Vector.Colors}" MaxSize="25" IsVertical="True"
                                          IsEnabled="{Binding ElementName=CropButton, Path=IsEnabled}">
                            <n:ImageMenuItem Header="Grayscale" Image="{StaticResource Vector.Video}" IsHitTestVisible="False" MaxSize="20"/>
                            <n:ImageMenuItem Header="Blur" Image="{StaticResource Vector.Video}" IsHitTestVisible="False" MaxSize="20"/>
                            <n:ImageMenuItem Header="Sepia" Image="{StaticResource Vector.Video}" IsHitTestVisible="False" MaxSize="20"/>
                        </n:DropDownButton>
                    </Grid>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.Select}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" x:Name="SelectLabel" Content="{DynamicResource Editor.Select.General}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="0" x:Name="SelectAllButton" Text="{DynamicResource Editor.Select.SelectAll}" Content="{StaticResource Vector.Cursor}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="u:Commands.SelectAll"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="1" x:Name="GoToButton" Text="{DynamicResource Editor.Select.GoTo}" Content="{StaticResource Vector.Forward}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="u:Commands.GoTo"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="2" Margin="0,1,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>

                        <Label Grid.Row="1" x:Name="CurrentSelectionLabel" Content="{DynamicResource Editor.Select.Current}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <Grid Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <n:ImageButton x:Name="InverseSelectionButton" Grid.Row="0" Text="{DynamicResource Editor.Select.Inverse}" Content="{StaticResource Vector.InverseSelection}"
                                           Margin="0" Padding="2" MinWidth="60" MaxSize="25" VerticalContentAlignment="Center"
						                   Command="u:Commands.InverseSelection"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>

                            <n:ImageButton x:Name="DeselectButton" Grid.Row="1" Text="{DynamicResource Editor.Select.Deselect}" Content="{StaticResource Vector.Unselect}"
                                           Margin="0" Padding="2" MinWidth="60" MaxSize="25" VerticalContentAlignment="Center"
						                   Command="u:Commands.Unselect"
                                           ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                           ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="3" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.Transitions}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="1" Grid.ColumnSpan="2" x:Name="StylesLabel" Content="{DynamicResource Editor.Transitions.Styles}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Row="0"  Grid.Column="0" x:Name="FadeTransitionButton" Text="{DynamicResource Editor.Transitions.Fade}" Content="{StaticResource Vector.Fade}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="u:Commands.Fade"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Row="0" Grid.Column="1" x:Name="SlideTransitionButton" Text="{DynamicResource Editor.Transitions.Slide}" Content="{StaticResource Vector.Slide}"
						               Margin="0" MaxSize="30" VerticalContentAlignment="Top"
						               Command="u:Commands.Slide"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>
                </Grid>
            </n:AwareTabItem>

            <n:AwareTabItem Header="{DynamicResource Editor.Playback}">
                <Grid Height="94" Margin="2" Background="#FFFAFAFA"
                      IsEnabled="{Binding FilledList, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type l:Editor}}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="7"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" Margin="0,1,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Content="{DynamicResource Editor.Playback.SelectedFrame}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <Viewbox Grid.Row="0" Grid.Column="0">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <n:CircularProgressBar StrokeThickness="2" Percentage="100" SegmentColor="Gray" Radius="24"/>
                                <n:CircularProgressBar StrokeThickness="2" Maximum="10010" Minimum="10" Value="{Binding ElementName=DelayNumericUpDown, Path=Value}" SegmentColor="#FFE28A73" Radius="24"/>
                                <n:CircularProgressBar StrokeThickness="22" Percentage="100" SegmentColor="#FFF0F1F1" Radius="10" />
                                <n:CircularProgressBar StrokeThickness="22" Maximum="10010" Minimum="10" Value="{Binding ElementName=DelayNumericUpDown, Path=Value}" SegmentColor="#FFE28A73" Radius="10" />
                            </Grid>
                        </Viewbox>

                        <Grid Grid.Row="0" Grid.Column="1" IsEnabled="{Binding Path=IsLoading, ElementName=EditorWindow, Converter={StaticResource InvertedBoolConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <n:NumericUpDown Grid.Column="0" x:Name="DelayNumericUpDown" Margin="0,3" StepValue="1" Minimum="10" Maximum="10000" 
                                             MinWidth="80" VerticalAlignment="Center" IsEnabled="{Binding Path=NotPreviewing, ElementName=EditorWindow}"
                                             IsHitTestVisible="{Binding ElementName=OverrideDelayButton, Path=IsEnabled}"
                                             ValueChanged="NumericUpDown_OnValueChanged">
                                <n:NumericUpDown.ToolTip>
                                    <ToolTip HorizontalOffset="-5" Placement="Bottom" Content="{DynamicResource Editor.Playback.DelayBetween}"/>
                                </n:NumericUpDown.ToolTip>
                            </n:NumericUpDown>

                            <Label Grid.Column="1" Content="ms" VerticalAlignment="Center" Padding="3"/>
                        </Grid>
                    </Grid>

                    <Separator Grid.Column="1" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>

                    <Grid Grid.Column="2" Margin="0,1,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="16"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Content="{DynamicResource Editor.Playback.MultipleFrames}" 
						       HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Padding="0" 
						       FontSize="12" Foreground="#FF707070"/>

                        <n:ImageButton Grid.Column="0" Grid.Row="0" x:Name="OverrideDelayButton" Text="{DynamicResource Editor.Playback.OverrideDelay}" Content="{StaticResource Vector.OverrideDelay}" 
							           Margin="0" MaxSize="30" VerticalContentAlignment="Top"
							           Command="u:Commands.OverrideDelay"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>

                        <n:ImageButton Grid.Column="1" Grid.Row="0" x:Name="ChangeDelayButton" Text="{DynamicResource Editor.Playback.ChangeDelay}" Content="{StaticResource Vector.ChangeDelay}" 
							           Margin="0" MaxSize="30" VerticalContentAlignment="Top"
							           Command="u:Commands.ChangeDelay"
                                       ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                       ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    </Grid>

                    <Separator Grid.Column="3" Grid.Row="0" Width="1" Height="Auto" HorizontalAlignment="Left" Margin="3,2"/>
                </Grid>
            </n:AwareTabItem>

        </n:HideableTabControl>

        <n:StatusBand Grid.Row="1" x:Name="EditorStatusBand"/>

        <!--Middle of the Window-->
        <Grid Grid.Row="2" x:Name="MiddleGrid" Background="{StaticResource Checker.DrawingBrush}" 
              IsEnabled="{Binding Path=IsLoading, ElementName=EditorWindow, Converter={StaticResource InvertedBoolConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <n:ZoomBox Grid.Column="0" x:Name="ZoomBoxControl" Background="Transparent" ClipToBounds="True"
                       AllowDrop="True" Drop="Control_Drop" DragEnter="Control_DragEnter" PreviewMouseWheel="Grid_MouseWheel">
                <n:ZoomBox.ContextMenu>
                    <ContextMenu>
                        <n:ImageMenuItem x:Name="PlayMenuItem" Header="{DynamicResource Editor.View.Play}" Image="{StaticResource Vector.Play}" MaxSize="16" Command="u:Commands.Play"/>
                        <Separator/>
                        <n:ImageMenuItem Header="{DynamicResource Editor.Edit.Undo}" Image="{StaticResource Vector.Undo}" MaxSize="16" Command="Undo"/>
                        <n:ImageMenuItem Header="{DynamicResource Editor.Edit.Redo}" Image="{StaticResource Vector.Redo}" MaxSize="16" Command="Redo"/>
                        <Separator/>
                        <n:ImageMenuItem Header="{DynamicResource Context.SaveAs}" Image="{StaticResource Vector.Gif}" MaxSize="16" Command="u:Commands.SaveAs"/>
                        <n:ImageMenuItem Header="{DynamicResource Recorder.Discard}" Image="{StaticResource Vector.Remove}" MaxSize="16" Command="u:Commands.DiscardProject"/>
                        <Separator/>
                        <n:ImageMenuItem Header="{DynamicResource Context.RemoveFrames}" Image="{StaticResource Vector.RemoveImage}" MaxSize="16" Command="Delete"/>
                    </ContextMenu>
                </n:ZoomBox.ContextMenu>
            </n:ZoomBox>

            <ScrollViewer Grid.Column="0" x:Name="MainScrollViewer" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" 
                          PreviewMouseWheel="Grid_MouseWheel" Visibility="{Binding Path=Visibility, ElementName=OverlayGrid}">
                <Grid x:Name="OverlayGrid" Visibility="Collapsed" Opacity="0">
                    <Label x:Name="OverlayLabel" Content="{DynamicResource Preview}" VerticalAlignment="Top" HorizontalAlignment="Left" 
                           FontSize="16" FontWeight="Light" Foreground="#FF347E4B" Effect="{StaticResource Shadow.Foreground.Small}"/>

                    <!--<Path x:Name="CropPath" VerticalAlignment="Center" HorizontalAlignment="Center" 
                          Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                          Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                          Visibility="{Binding ElementName=CropGrid, Path=Visibility}" Fill="Black" Opacity=".5">
                        <Path.Data>
                            <CombinedGeometry GeometryCombineMode="Exclude">
                                <CombinedGeometry.Geometry1>
                                    <RectangleGeometry>
                                        <RectangleGeometry.Rect>
                                            <MultiBinding Converter="{StaticResource IntToRectConverter}">
                                                <Binding ElementName="CaptionOverlayGrid" Path="Width" FallbackValue="0"/>
                                                <Binding ElementName="CaptionOverlayGrid" Path="Height" FallbackValue="0"/>
                                            </MultiBinding>
                                        </RectangleGeometry.Rect>
                                    </RectangleGeometry>
                                </CombinedGeometry.Geometry1>
                                <CombinedGeometry.Geometry2>
                                    <RectangleGeometry>
                                        <RectangleGeometry.Rect>
                                            <MultiBinding Converter="{StaticResource IntToRectConverter}">
                                                <Binding ElementName="LeftCropNumericUpDown" Path="Value" FallbackValue="0"/>
                                                <Binding ElementName="TopCropNumericUpDown" Path="Value" FallbackValue="0"/>
                                                <Binding ElementName="RightCropNumericUpDown" Path="Value" FallbackValue="0"/>
                                                <Binding ElementName="BottomCropNumericUpDown" Path="Value" FallbackValue="0"/>
                                            </MultiBinding>
                                        </RectangleGeometry.Rect>
                                    </RectangleGeometry>
                                </CombinedGeometry.Geometry2>
                            </CombinedGeometry>
                        </Path.Data>
                    </Path>-->

                    <AdornerDecorator Visibility="{Binding ElementName=CropGrid, Path=Visibility}">
                        <Grid x:Name="CropAreaGrid" VerticalAlignment="Center" HorizontalAlignment="Center" 
                          Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                          Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                          Visibility="{Binding ElementName=CropGrid, Path=Visibility}"/>
                    </AdornerDecorator>

                    <Grid x:Name="CaptionOverlayGrid" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                          Visibility="{Binding ElementName=CaptionGrid, Path=Visibility}">
                        <n:TextPath x:Name="CaptionOverlayLabel" FontFamily="{Binding ElementName=CaptionFontComboBox, Path=SelectedItem}" 
                                    FontStyle="{Binding ElementName=CaptionFontStyleComboBox, Path=SelectedItem}"
                                    FontWeight="{Binding ElementName=CaptionFontWeightComboBox, Path=SelectedItem}"
                                    FontSize="{Binding ElementName=CaptionFontSizeNumericUpDown, Path=Value}"
                                    Fill="{Binding ElementName=CaptionFontColor, Path=Background}"
                                    Stroke="{Binding ElementName=CaptionOutlineColor, Path=Background}"
                                    StrokeThickness="{Binding ElementName=CaptionOutlineThicknessNumericUpDown, Path=Value}"
                                    VerticalAlignment="{Binding ElementName=CaptionVerticalAligmentComboBox, Path=SelectedItem}"
                                    HorizontalAlignment="{Binding ElementName=CaptionHorizontalAligmentComboBox, Path=SelectedItem}"
                                    Margin="{Binding ElementName=CaptionMarginNumericUpDown, Path=Value}"
                                    Text="{Binding ElementName=CaptionTextBox, Path=Text}"/>
                    </Grid>

                    <Canvas x:Name="FreeTextOverlayCanvas" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                            Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                            Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                            Visibility="{Binding ElementName=FreeTextGrid, Path=Visibility}">
                        <TextBlock x:Name="FreeTextTextBlock" Padding="0" Cursor="ScrollAll"
                                   Text="{Binding ElementName=FreeTextTextBox, Path=Text}" 
                                   FontFamily="{Binding ElementName=FreeTextFontComboBox, Path=SelectedItem}" 
                                   FontStyle="{Binding ElementName=FreeTextFontStyleComboBox, Path=SelectedItem}"
                                   FontWeight="{Binding ElementName=FreeTextFontWeightComboBox, Path=SelectedItem}"
                                   FontSize="{Binding ElementName=FreeTextFontSizeNumericUpDown, Path=Value}"
                                   Foreground="{Binding ElementName=FreeTextFontColor, Path=Background}" 
                                   MouseLeftButtonDown="FreeTextTextBlock_OnMouseLeftButtonDown"
                                   MouseLeftButtonUp="FreeTextTextBlock_OnMouseLeftButtonUp"
                                   MouseMove="FreeTextTextBlock_OnMouseMove"/>
                    </Canvas>

                    <Grid x:Name="TitleFrameOverlayGrid" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                          Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                          Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                          Visibility="{Binding ElementName=TitleFrameGrid, Path=Visibility}" 
                          Background="{Binding ElementName=TitleFrameBackgroundColor, Path=Background}">
                        <TextBlock x:Name="TitleFrameTextBlock" Padding="0"
                                   Text="{Binding ElementName=TitleFrameTextBox, Path=Text}" 
                                   FontFamily="{Binding ElementName=TitleFrameFontComboBox, Path=SelectedItem}" 
                                   FontStyle="{Binding ElementName=TitleFrameFontStyleComboBox, Path=SelectedItem}"
                                   FontWeight="{Binding ElementName=TitleFrameFontWeightComboBox, Path=SelectedItem}"
                                   FontSize="{Binding ElementName=TitleFrameFontSizeNumericUpDown, Path=Value}"
                                   Foreground="{Binding ElementName=TitleFrameFontColor, Path=Background}"
                                   VerticalAlignment="{Binding ElementName=TitleFrameVerticalAligmentComboBox, Path=SelectedItem}"
                                   HorizontalAlignment="{Binding ElementName=TitleFrameHorizontalAligmentComboBox, Path=SelectedItem}"
                                   Margin="{Binding ElementName=TitleFrameMarginNumericUpDown, Path=Value}"/>
                    </Grid>

                    <n:InkCanvasExtended x:Name="FreeDrawingInkCanvas" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                                         Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" MinWidth="10" 
                                         Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}" MinHeight="10"
                                         Visibility="{Binding ElementName=FreeDrawingGrid, Path=Visibility}" Background="Transparent" >

                        <n:InkCanvasExtended.EditingMode>
                            <MultiBinding Converter="{StaticResource SelectionToEditingModeConverter}">
                                <Binding ElementName="PenModeRadioButton" Path="IsChecked"/>
                                <Binding ElementName="EraserModeRadioButton" Path="IsChecked"/>
                                <Binding ElementName="SelectorModeRadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.EditingMode>

                        <n:InkCanvasExtended.DefaultDrawingAttributes>
                            <MultiBinding Converter="{StaticResource SelectionToDrawingAttributesConverter}">
                                <Binding ElementName="FreeDrawingHeightNumericUpDown" Path="Value"/>
                                <Binding ElementName="FreeDrawingWidthNumericUpDown" Path="Value"/>
                                <Binding ElementName="FreeDrawingColorBorder" Path="Background"/>
                                <Binding ElementName="FitToCurveCheckBox" Path="IsChecked"/>
                                <Binding ElementName="IsHighLighterCheckBox" Path="IsChecked"/>
                                <Binding ElementName="RectangleRadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.DefaultDrawingAttributes>

                        <n:InkCanvasExtended.EraserShape>
                            <MultiBinding Converter="{StaticResource SelectionToStylusShapeConverter}">
                                <Binding ElementName="FreeDrawingEraserWidthNumericUpDown" Path="Value"/>
                                <Binding ElementName="FreeDrawingEraserHeightNumericUpDown" Path="Value"/>
                                <Binding ElementName="RectangleEraserRadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.EraserShape>
                    </n:InkCanvasExtended>

                    <!--Change it to a canvas later-->
                    <!--<AdornerDecorator>-->
                    <Grid x:Name="WatermarkOverlayGrid" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True" 
                            Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                            Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                            Visibility="{Binding ElementName=WatermarkGrid, Path=Visibility}">

                        <Image x:Name="WatermarkImage" Source="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkFilePath, Converter={StaticResource UriToBitmapConverter}}"
                               Stretch="None" Opacity="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkOpacity}"
                               VerticalAlignment="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkVerticalAligment}"
                               HorizontalAlignment="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkHorizontalAligment}" 
                               Margin="{Binding ElementName=WatermarkMarginNumericUpDown, Path=Value}" RenderTransformOrigin="0.5,0.5"
                               Width="{Binding RelativeSource={RelativeSource Self}, Path=Source, Converter={StaticResource SourceToSizeConverter}, ConverterParameter=width, FallbackValue=10}"
                               Height="{Binding RelativeSource={RelativeSource Self}, Path=Source, Converter={StaticResource SourceToSizeConverter}, ConverterParameter=height, FallbackValue=10}">
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkSize}" 
                                                ScaleY="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkSize}"/>
                            </Image.RenderTransform>
                        </Image>
                    </Grid>
                    <!--</AdornerDecorator>-->

                    <Border x:Name="BorderOverlayBorder" VerticalAlignment="Center" HorizontalAlignment="Center"
                                Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" 
                                Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}"
                                Visibility="{Binding ElementName=BorderGrid, Path=Visibility}"
                                BorderBrush="{Binding ElementName=BorderColorBorder, Path=Background}">
                        <Border.BorderThickness>
                            <MultiBinding Converter="{StaticResource DoubleToThicknessConverter}">
                                <Binding ElementName="BorderLeftThicknessNumericUpDown" Path="Value"/>
                                <Binding ElementName="BorderTopThicknessNumericUpDown" Path="Value"/>
                                <Binding ElementName="BorderRightThicknessNumericUpDown" Path="Value"/>
                                <Binding ElementName="BorderBottomThicknessNumericUpDown" Path="Value"/>
                            </MultiBinding>
                        </Border.BorderThickness>
                    </Border>

                    <Grid x:Name="ProgressOverlayGrid" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                          Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" MinWidth="10" 
                          Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}" MinHeight="10"
                          Visibility="{Binding ElementName=ProgressGrid, Path=Visibility}" Background="Transparent">

                        <Grid Visibility="{Binding ProgressType, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static u:ProgressType.Bar}}">
                            <Rectangle Name="ProgressHorizontalRectangle" Height="{Binding Source={x:Static h:Settings.Default}, Path=ProgressThickness}"
                                       Visibility="{Binding ProgressOrientation, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static Orientation.Horizontal}}"
                                       Fill="{Binding ProgressColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}}" 
                                       VerticalAlignment="{Binding ProgressVerticalAligment, Source={x:Static h:Settings.Default}}" 
                                       HorizontalAlignment="{Binding ProgressHorizontalAligment, Source={x:Static h:Settings.Default}}"/>

                            <Rectangle Name="ProgressVerticalRectangle" Width="{Binding Source={x:Static h:Settings.Default}, Path=ProgressThickness}"
                                       Visibility="{Binding ProgressOrientation, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static Orientation.Vertical}}"
                                       Fill="{Binding ProgressColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}}" 
                                       VerticalAlignment="{Binding ProgressVerticalAligment, Source={x:Static h:Settings.Default}}" 
                                       HorizontalAlignment="{Binding ProgressHorizontalAligment, Source={x:Static h:Settings.Default}}"/>
                        </Grid>

                        <TextBlock Name="ProgressHorizontalTextBlock" Padding="2,0" 
                                   Background="{Binding ProgressColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}}" 
                                   Foreground="{Binding ProgressFontColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}}" 
                                   Text="{Binding ElementName=ProgressPrecisionComboBox, Path=(SelectedItem).Tag, Mode=TwoWay}"
                                   VerticalAlignment="{Binding ProgressVerticalAligment, Source={x:Static h:Settings.Default}}" 
                                   HorizontalAlignment="{Binding ProgressHorizontalAligment, Source={x:Static h:Settings.Default}}"
                                   Visibility="{Binding ProgressType, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToVisibility}, ConverterParameter={x:Static u:ProgressType.Text}}"
                                   FontFamily="{Binding ElementName=ProgressFontComboBox, Path=SelectedItem}" 
                                   FontStyle="{Binding ElementName=ProgressFontStyleComboBox, Path=SelectedItem}"
                                   FontWeight="{Binding ElementName=ProgressFontWeightComboBox, Path=SelectedItem}"
                                   FontSize="{Binding ElementName=ProgressFontSizeNumericUpDown, Path=Value}"/>

                    </Grid>

                    <n:InkCanvasExtended x:Name="CinemagraphInkCanvas" VerticalAlignment="Center" HorizontalAlignment="Center" ClipToBounds="True"
                                         Width="{Binding ElementName=CaptionOverlayGrid, Path=Width, FallbackValue=0}" MinWidth="10" 
                                         Height="{Binding ElementName=CaptionOverlayGrid, Path=Height, FallbackValue=0}" MinHeight="10"
                                         Visibility="{Binding ElementName=CinemagraphGrid, Path=Visibility}" Background="Transparent">

                        <n:InkCanvasExtended.EditingMode>
                            <MultiBinding Converter="{StaticResource SelectionToEditingModeConverter}">
                                <Binding ElementName="PenMode2RadioButton" Path="IsChecked"/>
                                <Binding ElementName="EraserMode2RadioButton" Path="IsChecked"/>
                                <Binding ElementName="SelectorMode2RadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.EditingMode>

                        <n:InkCanvasExtended.DefaultDrawingAttributes>
                            <MultiBinding Converter="{StaticResource SelectionToDrawingAttributesConverter}">
                                <Binding ElementName="CinemagraphHeightNumericUpDown" Path="Value"/>
                                <Binding ElementName="CinemagraphWidthNumericUpDown" Path="Value"/>
                                <Binding Source="{x:Static h:Settings.Default}" Path="CinemagraphColor"/>
                                <Binding ElementName="FitToCurve2CheckBox" Path="IsChecked"/>
                                <Binding Source="{x:Static h:Settings.Default}" Path="CinemagraphIsHighlighter"/>
                                <Binding ElementName="Rectangle2RadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.DefaultDrawingAttributes>

                        <n:InkCanvasExtended.EraserShape>
                            <MultiBinding Converter="{StaticResource SelectionToStylusShapeConverter}">
                                <Binding ElementName="CinemagraphEraserWidthNumericUpDown" Path="Value"/>
                                <Binding ElementName="CinemagraphEraserHeightNumericUpDown" Path="Value"/>
                                <Binding ElementName="RectangleEraser2RadioButton" Path="IsChecked"/>
                            </MultiBinding>
                        </n:InkCanvasExtended.EraserShape>
                    </n:InkCanvasExtended>
                </Grid>
            </ScrollViewer>

            <Grid Grid.Column="0" x:Name="WelcomeGrid" Background="WhiteSmoke" Visibility="Visible" AllowDrop="True" Drop="Control_Drop" DragEnter="Control_DragEnter">
                <Grid.ContextMenu>
                    <ContextMenu>
                        <n:ImageMenuItem Header="{DynamicResource Context.NewRecording}" Image="{StaticResource Vector.Record.New}" MaxSize="16" Command="u:Commands.NewRecording"/>
                        <n:ImageMenuItem Header="{DynamicResource Context.NewWebcamRecording}" Image="{StaticResource Vector.Camera.New}" MaxSize="16" Command="u:Commands.NewWebcamRecording"/>
                        <n:ImageMenuItem Header="{DynamicResource Context.NewBlankAnimation}" Image="{StaticResource Vector.File.New}" MaxSize="16" Command="u:Commands.NewAnimation"/>
                        <n:ImageMenuItem Header="{DynamicResource Context.NewFromMediaProject}" Image="{StaticResource Vector.Open}" MaxSize="16" Command="u:Commands.NewFromMediaProject"/>
                    </ContextMenu>
                </Grid.ContextMenu>

                <TextBlock x:Name="WelcomeTextBlock" Text=";D" Foreground="#FFD0D0D0" FontSize="40" FontFamily="Segoe UI Semilight" 
                           TextWrapping="WrapWithOverflow" VerticalAlignment="Center" HorizontalAlignment="Center" Effect="{StaticResource Shadow.Foreground.Small}"/>
            </Grid>

            <Grid Grid.Column="1" x:Name="ActionGrid" Width="0" Background="#FFFAFAFA" Effect="{StaticResource Shadow.Background}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!--Title-->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>

                    <Viewbox Grid.Column="0" x:Name="ActionViewBox" Margin="5,5,0,5" MinWidth="20" MaxHeight="20" Stretch="Uniform" 
                             Child="{StaticResource Vector.Info}" />

                    <Label Grid.Column="1" x:Name="ActionTitleLabel" Content="Title" Padding="5,0,0,0" VerticalAlignment="Center"/>

                    <n:ImageButton Grid.Column="2" x:Name="HideButton" Content="{DynamicResource Vector.Close}" MaxSize="16" HorizontalContentAlignment="Center" HorizontalAlignment="Center"
                                   Style="{DynamicResource Style.Button.NoText}" MinWidth="30">
                        <n:ImageButton.ToolTip>
                            <ToolTip Content="{DynamicResource Action.Hide}" Placement="Top" HorizontalOffset="-5"/>
                        </n:ImageButton.ToolTip>

                        <n:ImageButton.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard Storyboard="{StaticResource HidePanelStoryboard}" HandoffBehavior="Compose"/>
                                <BeginStoryboard Storyboard="{StaticResource HideOverlayGridStoryboard}" HandoffBehavior="Compose"/>
                            </EventTrigger>
                        </n:ImageButton.Triggers>
                    </n:ImageButton>
                </Grid>

                <!--Content-->
                <ScrollViewer Grid.Row="1" x:Name="ActionScrollViewer" VerticalScrollBarVisibility="Auto">
                    <Grid x:Name="ActionInternalGrid">
                        <Grid x:Name="NewGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Size}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource ImportVideo.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="0" Grid.Column="1" x:Name="NewImageWidthNumericUpDown" Minimum="10" Maximum="2000" Margin="10,5" MinWidth="80" 
                                             Value="{Binding Source={x:Static h:Settings.Default}, Path=NewImageWidth, Mode=TwoWay}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource ImportVideo.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="1" Grid.Column="1" x:Name="NewImageHeightNumericUpDown" Minimum="10" Maximum="2000" Margin="10,5" MinWidth="80" 
                                             Value="{Binding Source={x:Static h:Settings.Default}, Path=NewImageHeight, Mode=TwoWay}"/>
                            </Grid>

                            <Label Grid.Row="2" Content="{DynamicResource Background}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Color}" VerticalAlignment="Center" Padding="0"/>
                                <Border Grid.Row="1" Grid.Column="1" x:Name="NewImageBackgroundColor" Height="26" Margin="10,5" Cursor="Hand" 
                                        BorderBrush="#FFABABAB" BorderThickness="1" Background="{Binding NewImageColor, Source={x:Static h:Settings.Default}, 
                                        Converter={StaticResourceExtension ColorToBrush}, Mode=TwoWay}" MinWidth="70" 
                                        MouseLeftButtonDown="NewAnimationBackgroundColor_MouseLeftButtonDown"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="SaveGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource SaveAs.Type}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ImageRadioButton Grid.Column="0" x:Name="GifRadioButton" Content="{StaticResource Vector.Gif}" Text="{DynamicResource SaveAs.Gif}" 
                                                    IsChecked="{Binding SaveType, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Gif}}"
                                                    Checked="SaveType_Checked"/>

                                <n:ImageRadioButton Grid.Column="1" x:Name="VideoRadioButton" Content="{StaticResource Vector.Video}" Text="{DynamicResource SaveAs.Video}"
                                                    IsChecked="{Binding SaveType, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:Export.Video}}"
                                                    Checked="SaveType_Checked"/>
                            </Grid>

                            <Label Grid.Row="2" Content="{DynamicResource SaveAs.Encoder}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <WrapPanel Grid.Row="0" Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2VisibilityConverter}}">
                                    <!--<n:ImageRadioButton x:Name="NewEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource SaveAs.Encoder.OpenBoardAnim}"
                                                        IsChecked="{Binding GifEncoder, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.OpenBoardAnim}}"/>
                                    <Separator Width="1"/>-->
                                    <n:ImageRadioButton x:Name="LegacyEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource SaveAs.Encoder.Legacy}" 
                                                        IsChecked="{Binding GifEncoder, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.Legacy}}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="PaintNetEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource SaveAs.Encoder.System}"
                                                        IsChecked="{Binding GifEncoder, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:GifEncoderType.PaintNet}}"/>
                                </WrapPanel>

                                <WrapPanel Grid.Row="0" Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2VisibilityConverter}}">
                                    <n:ImageRadioButton x:Name="SystemEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource SaveAs.Encoder.System}"
                                                        IsChecked="{Binding VideoEncoder, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:VideoEncoderType.AviStandalone}}"/>
                                    <Separator Width="1"/>
                                    <n:ImageRadioButton x:Name="FfmpegEncoderRadioButton" MaxSize="0" Padding="0,2" Text="{DynamicResource SaveAs.Encoder.Ffmpeg}"
                                                        IsChecked="{Binding VideoEncoder, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToBool}, ConverterParameter={x:Static u:VideoEncoderType.Ffmpg}}"
                                                        Checked="FfmpegEncoderRadioButton_Checked"/>
                                </WrapPanel>

                                <n:StatusBand Grid.Row="1" x:Name="EncoderStatusBand"/>
                            </Grid>

                            <Label Grid.Row="4" Content="{DynamicResource SaveAs.GifOptions}" Style="{StaticResource LabelSeparator}"
                                   Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                            <Grid Grid.Row="5" Margin="10,0,0,0" 
                                  Visibility="{Binding IsChecked, ElementName=GifRadioButton, Converter={StaticResource Bool2VisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource SaveAs.Quality}" VerticalAlignment="Center" 
                                       Padding="0" Visibility="{Binding IsChecked, ElementName=LegacyEncoderRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                                <Slider Grid.Row="0" Grid.Column="1" x:Name="QualitySlider" Margin="3,5" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight" 
                                        Maximum="20" Minimum="1" Value="{Binding Quality, Mode=TwoWay, Source={x:Static h:Settings.Default}}" 
                                        SmallChange="1" IsSnapToTickEnabled="True" IsMoveToPointEnabled="True"
                                        Visibility="{Binding IsChecked, ElementName=LegacyEncoderRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource SaveAs.GifOptions.Loop}" VerticalAlignment="Center" Padding="0"/>
                                <CheckBox Grid.Row="1" Grid.Column="1" x:Name="LoopedCheckBox" Content="{DynamicResource SaveAs.GifOptions.LoopedGif}" 
                                          IsChecked="{Binding Looped, Source={x:Static h:Settings.Default}}" Margin="5" />

                                <Grid Grid.Row="2" Grid.Column="1" Margin="15,5,0,0" 
                                      Visibility="{Binding IsChecked, ElementName=LoopedCheckBox, Converter={StaticResource Bool2VisibilityConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <CheckBox x:Name="RepeatForeverCheckBox" Margin="0,3" Content="{DynamicResource SaveAs.GifOptions.RepeatForever}" 
                                              IsChecked="{Binding RepeatForever, Source={x:Static h:Settings.Default}}"
                                              Grid.Row="0" Grid.ColumnSpan="2" Grid.Column="0" />
                                    <n:NumericUpDown Grid.Row="1" Grid.Column="0" x:Name="RepeatCountNumericUpDown" Margin="0,3" StepValue="1" Minimum="1" Maximum="100" 
                                                     Value="{Binding Source={x:Static h:Settings.Default}, Path=RepeatCount, Mode=TwoWay}" MinWidth="45" 
                                                     IsEnabled="{Binding IsChecked, ElementName=RepeatForeverCheckBox, Converter={StaticResource InvertedBool}}"/>
                                    <Label Margin="0,3" Grid.Column="1" Content="{DynamicResource SaveAs.GifOptions.RepeatCount}" Grid.Row="1" Foreground="#FF444444" 
                                           IsEnabled="{Binding IsChecked, ElementName=RepeatForeverCheckBox, Converter={StaticResource InvertedBool}}"/>
                                </Grid>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource SaveAs.Extras}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=PaintNetEncoderRadioButton, Converter={StaticResource InvertedBoolToVisibility}}"/>
                                <CheckBox Grid.Row="3" Grid.Column="1" x:Name="DetectCheckBox" Margin="5" Content="{DynamicResource SaveAs.GifOptions.DetectUnchanged}" 
                                          IsChecked="{Binding DetectUnchanged, Source={x:Static h:Settings.Default}}"
                                          Visibility="{Binding IsChecked, ElementName=PaintNetEncoderRadioButton, Converter={StaticResource InvertedBoolToVisibility}}"/>

                                <Grid Grid.Row="4" Grid.Column="1" Margin="10,5,0,0" IsEnabled="{Binding IsChecked, ElementName=DetectCheckBox}"
                                      Visibility="{Binding IsChecked, ElementName=PaintNetEncoderRadioButton, Converter={StaticResource InvertedBoolToVisibility}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <CheckBox Grid.Row="0" x:Name="PaintTransparentCheckBox" Content="{DynamicResource SaveAs.GifOptions.PaintWithDummy}" 
                                              IsChecked="{Binding PaintTransparent, Source={x:Static h:Settings.Default}}"/>

                                    <n:ImageButton Grid.Row="1" Text="{DynamicResource SaveAs.GifOptions.SelectDummyColor}" MaxSize="20" Margin="10,5,5,5" 
                                                   IsEnabled="{Binding IsChecked, ElementName=PaintTransparentCheckBox}" HorizontalAlignment="Left"
                                                   MinHeight="25" Padding="2" Click="TransparentColorButton_Click">
                                        <n:ImageButton.Content>
                                            <Border Background="{Binding TransparentColor, Source={x:Static h:Settings.Default}, Converter={StaticResource ColorToBrush}}" 
                                                    BorderThickness="1" BorderBrush="#FFABABAB" Height="20" Width="20"/>
                                        </n:ImageButton.Content>
                                    </n:ImageButton>
                                </Grid>
                            </Grid>

                            <Label Grid.Row="4" Content="{DynamicResource SaveAs.VideoOptions}" Style="{StaticResource LabelSeparator}"
                                   Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                            <Grid Grid.Row="5" Margin="10,0,0,0" 
                                  Visibility="{Binding IsChecked, ElementName=VideoRadioButton, Converter={StaticResource Bool2VisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource SaveAs.Quality}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                                <Slider Grid.Row="0" Grid.Column="1" x:Name="AviQualitySlider" Margin="3,5" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight" 
                                        Maximum="20000" Minimum="1" Value="{Binding AviQuality, Mode=TwoWay, Source={x:Static h:Settings.Default}}" 
                                        SmallChange="1" IsSnapToTickEnabled="True" IsMoveToPointEnabled="True"
                                        Visibility="{Binding IsChecked, ElementName=SystemEncoderRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource SaveAs.VideoOptions.Fps}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=FfmpegEncoderRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                                <n:NumericUpDown Grid.Row="1" Grid.Column="1" x:Name="FpsNumericUpDown" Minimum="1" Maximum="60" Margin="5,3" MinWidth="80" 
                                                 HorizontalAlignment="Left" Value="{Binding Source={x:Static h:Settings.Default}, Path=OutputFramerate}"
                                                 Visibility="{Binding IsChecked, ElementName=FfmpegEncoderRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource SaveAs.VideoOptions.Format}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=FfmpegEncoderRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                                <ComboBox Grid.Row="2" Grid.Column="1" Name="VideoTypeComboBox" Margin="5,3" Height="23" SelectedIndex="1"
                                          Visibility="{Binding IsChecked, ElementName=FfmpegEncoderRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"
                                          SelectionChanged="SaveType_Checked">
                                    <ComboBoxItem Tag=".avi">Avi</ComboBoxItem>
                                    <ComboBoxItem Tag=".mp4">Mp4</ComboBoxItem>
                                    <ComboBoxItem Tag=".webm">WebM</ComboBoxItem>
                                    <ComboBoxItem Tag=".wmv">Wmv</ComboBoxItem>
                                </ComboBox>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource SaveAs.Extras}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=FfmpegEncoderRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                                <TextBox Grid.Row="3" Grid.Column="1" MinHeight="23" Margin="5,3" Text="{Binding Source={x:Static h:Settings.Default}, Path=ExtraParameters}"
                                         VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow"
                                         Visibility="{Binding IsChecked, ElementName=FfmpegEncoderRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                            </Grid>

                            <Label Grid.Row="6" Content="{DynamicResource SaveAs.File}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="7" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBox Grid.Column="0" x:Name="OutputFolderTextBox" Text="{Binding Source={x:Static h:Settings.Default}, Path=DefaultOutput}" MinHeight="23" 
                                             Height="Auto" Margin="1,3" VerticalContentAlignment="Top" ToolTipService.Placement="Top"
                                             ToolTip="{DynamicResource SaveAs.File.Location}" TextWrapping="WrapWithOverflow"/>

                                    <n:ImageButton Grid.Column="1" Content="{StaticResource Vector.Open}" MaxSize="20"
                                                   Click="ChooseLocation_Click" ToolTip="{DynamicResource SaveAs.File.Choose}"
                                                   ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>
                                </Grid>

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="25"/>
                                        <ColumnDefinition Width="25"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBox Grid.Column="0" x:Name="OutputFilenameTextBox" Text="{Binding Source={x:Static h:Settings.Default}, Path=LatestFilename}" 
                                             MinHeight="23" Margin="1,3" VerticalContentAlignment="Center" TextChanged="FilenameTextBox_TextChanged"
                                             ToolTip="{DynamicResource SaveAs.File.Name}" ToolTipService.Placement="Bottom" 
                                             ToolTipService.HorizontalOffset="-5"/>

                                    <n:ImageButton Grid.Column="1" x:Name="IncreaseCountButton" 
                                                   Content="{StaticResource Vector.Add}" MaxSize="15" Click="IncreaseNumber_Click"
                                                   ToolTip="{DynamicResource SaveAs.File.Increase}" ToolTipService.Placement="Bottom"/>
                                    <n:ImageButton Grid.Column="2" x:Name="DecreaseCountButton" 
                                                   Content="{StaticResource Vector.Subtract}" MaxSize="15" Click="DecreaseNumber_Click"
                                                   ToolTip="{DynamicResource SaveAs.File.Decrease}" ToolTipService.Placement="Bottom"/>
                                </Grid>

                                <CheckBox Grid.Row="2" Content="{DynamicResource SaveAs.File.Overwrite}" Margin="3"
                                          IsChecked="{Binding Source={x:Static h:Settings.Default}, Path=OverwriteOnSave}"/>
                            </Grid>

                            <Grid Grid.Row="8" Name="FileExistsGrid" Visibility="Collapsed" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Row="0" Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Warning}" />
                                <TextBlock Grid.Row="0" Grid.Column="1" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="11" Padding="3" TextWrapping="WrapWithOverflow">
                                    
                                    <Hyperlink Click="FileHyperlink_OnClick" ToolTip="{DynamicResource Encoder.OpenFile}" Cursor="Hand">
                                        <Run Text="{DynamicResource SaveAs.File.Exists}"/>
                                    </Hyperlink>
                                </TextBlock>
                            </Grid>
                        </Grid>
                        <Grid x:Name="ClipboardGrid" Visibility="Collapsed" Height="{Binding ElementName=ActionScrollViewer, Path=ActualHeight, FallbackValue=100}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Clipboard.Entries}" Margin="5,0" Padding="0,5" Style="{StaticResource LabelSeparator}"/>
                            <ListBox Grid.Row="1" x:Name="ClipboardListView" Margin="10,5,5,5" MinHeight="60" VerticalAlignment="Stretch" 
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                <ListBox.Resources>
                                    <ContextMenu x:Key="ClipboardContextMenu">
                                        <n:ImageMenuItem Header="{DynamicResource Clipboard.Entry}" Image="{StaticResource Vector.Paste}" MaxSize="16" IsHitTestVisible="False"/>
                                        <Separator/>
                                        <n:ImageMenuItem Header="{DynamicResource Clipboard.Explore}" Image="{StaticResource Vector.Open}" MaxSize="16" Command="u:Commands.ExploreClipboard"/>
                                        <n:ImageMenuItem Header="{DynamicResource Clipboard.Remove}" Image="{StaticResource Vector.Remove}" MaxSize="16" Command="u:Commands.RemoveClipboardEntry"/>
                                    </ContextMenu>
                                </ListBox.Resources>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem">
                                        <Setter Property="ContextMenu" Value="{StaticResource ClipboardContextMenu}"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>

                            <Label Grid.Row="2" Content="{DynamicResource Clipboard.Behavior}" Margin="5,0" Padding="0,5" Style="{StaticResource LabelSeparator}"/>
                            <RadioButton Grid.Row="3" x:Name="PasteBeforeRadioButton" Content="{DynamicResource Clipboard.Before}" Margin="10,5,5,5" IsChecked="True"/>
                            <RadioButton Grid.Row="4" x:Name="PasteAfterRadioButton" Content="{DynamicResource Clipboard.After}" Margin="10,5,5,5"/>
                        </Grid>
                        <Grid x:Name="ResizeGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Resize.CurrentProperties}" Style="{StaticResource LabelSeparator}"/>
                            <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10,0,0,0">
                                <Label x:Name="CurrentWidthLabel" Content="100"/>
                                <Label Content="x"/>
                                <Label x:Name="CurrentHeightLabel" Content="100"/>
                                <Label Content="•"/>
                                <Label x:Name="CurrentDpiLabel" Content="100"/>
                                <Label Content="{DynamicResource Resize.Dpi}"/>
                            </StackPanel>

                            <Label Grid.Row="2" Content="{DynamicResource Resize.NewProperties}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Resize.Dpi2}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="0" Grid.Column="1" x:Name="DpiNumericUpDown" Minimum="72" Maximum="200" Margin="10,5" MinWidth="70"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource ImportVideo.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="1" Grid.Column="1" x:Name="WidthResizeNumericUpDown" Minimum="1" Maximum="2000" Margin="10,5" 
                                                 MinWidth="70" ValueChanged="WidthResizeNumericUpDown_ValueChanged"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource ImportVideo.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="2" Grid.Column="1" x:Name="HeightResizeNumericUpDown" Minimum="1" Maximum="2000" Margin="10,5" 
                                                 MinWidth="70" ValueChanged="HeightResizeNumericUpDown_ValueChanged"/>

                                <Viewbox Grid.Row="1" Grid.Column="2" Grid.RowSpan="2" Child="{StaticResource Vector.No}" MaxHeight="25"
                                     Visibility="{Binding ElementName=KeepAspectCheckBox, Path=IsChecked, Converter={StaticResource Bool2VisibilityConverter}}"/>
                            </Grid>

                            <CheckBox Grid.Row="4" x:Name="KeepAspectCheckBox" Content="{DynamicResource Resize.KeepAspect}" Margin="10,5" IsChecked="True" 
                                      Checked="KeepAspectCheckBox_Checked"/>
                        </Grid>
                        <Grid x:Name="CropGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Preview}" Style="{StaticResource LabelSeparator}"/>
                            <Image Grid.Row="1" x:Name="CropImage" Height="120" Stretch="Uniform" Margin="10,0,5,0" Effect="{StaticResource Shadow.Black.Large}"/>
                            <Label Grid.Row="2" x:Name="CropSizeLabel" Content="0 × 0" HorizontalAlignment="Center" Padding="2"/>

                            <Label Grid.Row="3" Content="{DynamicResource Crop.Points}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="4" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Crop.Top}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="0" Grid.Column="1" x:Name="TopCropNumericUpDown" Minimum="0" Margin="10,3" MinWidth="70"
                                                 ValueChanged="CropValue_Changed">
                                    <n:NumericUpDown.Maximum>
                                        <MultiBinding Converter="{StaticResource MaximumValueConverter}" Mode="OneWay">
                                            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                            <Binding ElementName="BottomCropNumericUpDown" Path="Value" />
                                            <Binding ElementName="BottomCropNumericUpDown" Path="Minimum" FallbackValue="0"/>
                                        </MultiBinding>
                                    </n:NumericUpDown.Maximum>
                                </n:NumericUpDown>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Crop.Left}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="1" Grid.Column="1" x:Name="LeftCropNumericUpDown" Minimum="0" Margin="10,3" MinWidth="70"
                                                 ValueChanged="CropValue_Changed">
                                    <n:NumericUpDown.Maximum>
                                        <MultiBinding Converter="{StaticResource MaximumValueConverter}" Mode="OneWay">
                                            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                            <Binding ElementName="RightCropNumericUpDown" Path="Value" />
                                            <Binding ElementName="RightCropNumericUpDown" Path="Minimum" FallbackValue="0"/>
                                        </MultiBinding>
                                    </n:NumericUpDown.Maximum>
                                </n:NumericUpDown>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Crop.Bottom}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="2" Grid.Column="1" x:Name="BottomCropNumericUpDown" Minimum="10" Margin="10,3" 
                                                 MinWidth="70" ValueChanged="CropValue_Changed">
                                    <n:NumericUpDown.Maximum>
                                        <MultiBinding Converter="{StaticResource MaximumValueConverter}">
                                            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                            <Binding ElementName="CropAreaGrid" Path="Height" FallbackValue="0"/>
                                            <!--<Binding ElementName="TopCropNumericUpDown" Path="Value" FallbackValue="0"/>-->
                                        </MultiBinding>
                                    </n:NumericUpDown.Maximum>
                                </n:NumericUpDown>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Crop.Right}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="3" Grid.Column="1" x:Name="RightCropNumericUpDown" Minimum="10" Margin="10,3" 
                                                 MinWidth="70" ValueChanged="CropValue_Changed">
                                    <n:NumericUpDown.Maximum>
                                        <MultiBinding Converter="{StaticResource MaximumValueConverter}" Mode="OneWay">
                                            <Binding RelativeSource="{RelativeSource Mode=Self}" Path="Minimum" FallbackValue="0"/>
                                            <Binding ElementName="CropAreaGrid" Path="Width" FallbackValue="0"/>
                                            <!--<Binding ElementName="LeftCropNumericUpDown" Path="Value" FallbackValue="0"/>-->
                                        </MultiBinding>
                                    </n:NumericUpDown.Maximum>
                                </n:NumericUpDown>
                            </Grid>
                        </Grid>
                        <Grid x:Name="FlipRotateGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Editor.Image.FlipRotate}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0" HorizontalAlignment="Center">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <n:ImageRadioButton Grid.Row="0" x:Name="FlipHorizontalRadioButton" Text="{DynamicResource FlipRotate.FlipHorizontal}"
                                                    Content="{StaticResource Vector.FlipHorizontal}" Cursor="Hand" MaxSize="25" Padding="0,5"
                                                    IsChecked="True"/>

                                <n:ImageRadioButton Grid.Row="1" x:Name="FlipVerticalRadioButton" Text="{DynamicResource FlipRotate.FlipVertical}"
                                                    Content="{StaticResource Vector.FlipVertical}" Cursor="Hand" MaxSize="25" Padding="0,5"/>


                                <n:ImageRadioButton Grid.Row="2" x:Name="RotateLeftRadioButton" Text="{DynamicResource FlipRotate.RotateLeft}"
                                                    Content="{StaticResource Vector.RotateLeft90}" Cursor="Hand" MaxSize="25" Padding="0,5"/>


                                <n:ImageRadioButton Grid.Row="3" x:Name="RotateRightRadioButton" Text="{DynamicResource FlipRotate.RotateRight}"
                                                    Content="{StaticResource Vector.RotateRight90}" Cursor="Hand" MaxSize="25" Padding="0,5"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="CaptionGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Caption.Text}" Style="{StaticResource LabelSeparator}"/>
                            <TextBox Grid.Row="1" x:Name="CaptionTextBox"  Margin="10,5,5,5" AcceptsReturn="True" AcceptsTab="True"
                                 Text="{Binding Source={x:Static h:Settings.Default}, Path=CaptionText}"/>

                            <Label Grid.Row="2" Content="{DynamicResource Caption.Font}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="CaptionFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" IsEditable="True"
                                      ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=CaptionFontFamily}">
                                    <ComboBox.ItemsSource>
                                        <Binding Source="{StaticResource MyFonts}" />
                                    </ComboBox.ItemsSource>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="CaptionFontStyleComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" IsEditable="True"
                                      ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=CaptionFontStyle}">
                                    <ComboBox.Resources>
                                        <Style x:Key="FontStyle">
                                            <Setter Property="Control.FontStyle" Value="{Binding .}"/>
                                            <Setter Property="Control.FontSize" Value="14" />
                                        </Style>

                                        <DataTemplate x:Key="FontTemplate">
                                            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                <TextBlock Style="{StaticResource FontStyle}" Text="{Binding .}" />
                                            </VirtualizingStackPanel>
                                        </DataTemplate>
                                    </ComboBox.Resources>

                                    <x:Static Member="FontStyles.Normal"/>
                                    <x:Static Member="FontStyles.Italic"/>
                                    <x:Static Member="FontStyles.Oblique"/>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="2" Grid.Column="1" x:Name="CaptionFontWeightComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" 
                                      ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=CaptionFontWeight}">
                                    <ComboBox.Resources>
                                        <Style x:Key="FontStyle">
                                            <Setter Property="Control.FontWeight" Value="{Binding .}"/>
                                            <Setter Property="Control.FontSize" Value="14" />
                                        </Style>

                                        <DataTemplate x:Key="FontTemplate">
                                            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                <TextBlock Style="{StaticResource FontStyle}" Text="{Binding .}" />
                                            </VirtualizingStackPanel>
                                        </DataTemplate>
                                    </ComboBox.Resources>

                                    <x:Static Member="FontWeights.Black"/>
                                    <x:Static Member="FontWeights.Bold"/>
                                    <x:Static Member="FontWeights.DemiBold"/>
                                    <x:Static Member="FontWeights.ExtraBlack"/>
                                    <x:Static Member="FontWeights.ExtraBold"/>
                                    <x:Static Member="FontWeights.ExtraLight"/>
                                    <x:Static Member="FontWeights.Heavy"/>
                                    <x:Static Member="FontWeights.Light"/>
                                    <x:Static Member="FontWeights.Medium"/>
                                    <x:Static Member="FontWeights.Normal"/>
                                    <x:Static Member="FontWeights.Regular"/>
                                    <x:Static Member="FontWeights.SemiBold"/>
                                    <x:Static Member="FontWeights.Thin"/>
                                    <x:Static Member="FontWeights.UltraBlack"/>
                                    <x:Static Member="FontWeights.UltraBold"/>
                                    <x:Static Member="FontWeights.UltraLight"/>
                                </ComboBox>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="3" Grid.Column="1" x:Name="CaptionFontSizeNumericUpDown" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                             Value="{Binding Source={x:Static h:Settings.Default}, Path=CaptionFontSize}"/>

                                <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <Border Grid.Row="4" Grid.Column="1" x:Name="CaptionFontColor" Height="26" Margin="10,5" Cursor="Hand" BorderBrush="#FFABABAB" BorderThickness="1"
                                    Background="{Binding CaptionFontColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}, Mode=TwoWay}" MouseLeftButtonDown="CaptionFontColor_MouseLeftButtonDown"/>
                            </Grid>

                            <Label Grid.Row="4" Content="{DynamicResource Caption.Outline}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="5" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="0" Grid.Column="1" x:Name="CaptionOutlineThicknessNumericUpDown" Minimum="1" Maximum="20" Margin="10,5" MinWidth="70" 
                                             Value="{Binding Source={x:Static h:Settings.Default}, Path=CaptionOutlineThickness}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <Border Grid.Row="1" Grid.Column="1" x:Name="CaptionOutlineColor" Height="26" Margin="10,5" Cursor="Hand" BorderBrush="#FFABABAB" BorderThickness="1"
                                        Background="{Binding CaptionOutlineColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}, Mode=TwoWay}"
                                        MouseLeftButtonDown="CaptionOutlineColor_MouseLeftButtonDown"/>
                            </Grid>

                            <Label Grid.Row="6" Content="{DynamicResource Caption.Layout}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="7" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="CaptionVerticalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="110"
                                      SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=CaptionVerticalAligment}">
                                    <x:Static Member="VerticalAlignment.Top"/>
                                    <x:Static Member="VerticalAlignment.Center"/>
                                    <x:Static Member="VerticalAlignment.Bottom"/>
                                </ComboBox>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="CaptionHorizontalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" 
                                          SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=CaptionHorizontalAligment}">
                                    <x:Static Member="HorizontalAlignment.Left"/>
                                    <x:Static Member="HorizontalAlignment.Center"/>
                                    <x:Static Member="HorizontalAlignment.Right"/>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource String.Margin}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="2" Grid.Column="1" x:Name="CaptionMarginNumericUpDown" Minimum="-100" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=CaptionMargin}"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="FreeTextGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Caption.Text}" Style="{StaticResource LabelSeparator}"/>
                            <TextBox Grid.Row="1" x:Name="FreeTextTextBox"  Margin="10,5,5,5" AcceptsReturn="True" AcceptsTab="True"
                                     Text="{Binding Source={x:Static h:Settings.Default}, Path=FreeTextText}"/>

                            <Label Grid.Row="2" Content="{DynamicResource Caption.Font}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="FreeTextFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="110"  IsEditable="True"
                                          ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=FreeTextFontFamily}">
                                    <ComboBox.ItemsSource>
                                        <Binding Source="{StaticResource MyFonts}" />
                                    </ComboBox.ItemsSource>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="FreeTextFontStyleComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" IsEditable="True"
                                      ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=FreeTextFontStyle}">
                                    <ComboBox.Resources>
                                        <Style x:Key="FontStyle">
                                            <Setter Property="Control.FontStyle" Value="{Binding .}"/>
                                            <Setter Property="Control.FontSize" Value="14" />
                                        </Style>

                                        <DataTemplate x:Key="FontTemplate">
                                            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                <TextBlock Style="{StaticResource FontStyle}" Text="{Binding .}" />
                                            </VirtualizingStackPanel>
                                        </DataTemplate>
                                    </ComboBox.Resources>

                                    <x:Static Member="FontStyles.Normal"/>
                                    <x:Static Member="FontStyles.Italic"/>
                                    <x:Static Member="FontStyles.Oblique"/>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="2" Grid.Column="1" x:Name="FreeTextFontWeightComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" IsEditable="True"
                                          ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=FreeTextFontWeight}">
                                    <ComboBox.Resources>
                                        <Style x:Key="FontStyle">
                                            <Setter Property="Control.FontWeight" Value="{Binding .}"/>
                                            <Setter Property="Control.FontSize" Value="14" />
                                        </Style>

                                        <DataTemplate x:Key="FontTemplate">
                                            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                <TextBlock Style="{StaticResource FontStyle}" Text="{Binding .}" />
                                            </VirtualizingStackPanel>
                                        </DataTemplate>
                                    </ComboBox.Resources>

                                    <x:Static Member="FontWeights.Black"/>
                                    <x:Static Member="FontWeights.Bold"/>
                                    <x:Static Member="FontWeights.DemiBold"/>
                                    <x:Static Member="FontWeights.ExtraBlack"/>
                                    <x:Static Member="FontWeights.ExtraBold"/>
                                    <x:Static Member="FontWeights.ExtraLight"/>
                                    <x:Static Member="FontWeights.Heavy"/>
                                    <x:Static Member="FontWeights.Light"/>
                                    <x:Static Member="FontWeights.Medium"/>
                                    <x:Static Member="FontWeights.Normal"/>
                                    <x:Static Member="FontWeights.Regular"/>
                                    <x:Static Member="FontWeights.SemiBold"/>
                                    <x:Static Member="FontWeights.Thin"/>
                                    <x:Static Member="FontWeights.UltraBlack"/>
                                    <x:Static Member="FontWeights.UltraBold"/>
                                    <x:Static Member="FontWeights.UltraLight"/>
                                </ComboBox>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="3" Grid.Column="1" x:Name="FreeTextFontSizeNumericUpDown" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=FreeTextFontSize}"/>

                                <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <Border Grid.Row="4" Grid.Column="1" x:Name="FreeTextFontColor" Height="26" Margin="10,5" Cursor="Hand" BorderBrush="#FFABABAB" BorderThickness="1"
                                        Background="{Binding FreeTextFontColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}, Mode=TwoWay}" 
                                        MouseLeftButtonDown="FreeTextFontColor_MouseLeftButtonDown"/>
                            </Grid>

                            <Label Grid.Row="4" Content="{DynamicResource Caption.Layout}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="5" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Crop.Left}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="0" Grid.Column="1" x:Name="FreeTextPositionXNumericUpDown" Minimum="-2000" Maximum="2000" Margin="10,5" MinWidth="70"
                                                 Value="{Binding ElementName=FreeTextTextBlock, Path=(Canvas.Left), Converter={StaticResource DoubleToIntConverter}, Mode=TwoWay, FallbackValue=0}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Crop.Top}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="1" Grid.Column="1" x:Name="FreeTextPositionYNumericUpDown" Minimum="-2000" Maximum="2000" Margin="10,5" MinWidth="70"
                                                 Value="{Binding ElementName=FreeTextTextBlock, Path=(Canvas.Top), Converter={StaticResource DoubleToIntConverter}, Mode=TwoWay, FallbackValue=0}"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="TitleFrameGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Caption.Text}" Style="{StaticResource LabelSeparator}"/>
                            <TextBox Grid.Row="1" x:Name="TitleFrameTextBox"  Margin="10,5,5,5" AcceptsReturn="True" AcceptsTab="True"
                                     Text="{Binding Source={x:Static h:Settings.Default}, Path=TitleFrameText}"/>

                            <Label Grid.Row="2" Content="{DynamicResource Caption.Font}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="TitleFrameFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="110"  IsEditable="True"
                                          ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=TitleFrameFontFamily}">
                                    <ComboBox.ItemsSource>
                                        <Binding Source="{StaticResource MyFonts}" />
                                    </ComboBox.ItemsSource>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="TitleFrameFontStyleComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" IsEditable="True"
                                          ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=TitleFrameFontStyle}">
                                    <ComboBox.Resources>
                                        <Style x:Key="FontStyle">
                                            <Setter Property="Control.FontStyle" Value="{Binding .}"/>
                                            <Setter Property="Control.FontSize" Value="14" />
                                        </Style>

                                        <DataTemplate x:Key="FontTemplate">
                                            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                <TextBlock Style="{StaticResource FontStyle}" Text="{Binding .}" />
                                            </VirtualizingStackPanel>
                                        </DataTemplate>
                                    </ComboBox.Resources>

                                    <x:Static Member="FontStyles.Normal"/>
                                    <x:Static Member="FontStyles.Italic"/>
                                    <x:Static Member="FontStyles.Oblique"/>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="2" Grid.Column="1" x:Name="TitleFrameFontWeightComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" IsEditable="True"
                                          ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=TitleFrameFontWeight}">
                                    <ComboBox.Resources>
                                        <Style x:Key="FontStyle">
                                            <Setter Property="Control.FontWeight" Value="{Binding .}"/>
                                            <Setter Property="Control.FontSize" Value="14" />
                                        </Style>

                                        <DataTemplate x:Key="FontTemplate">
                                            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                <TextBlock Style="{StaticResource FontStyle}" Text="{Binding .}" />
                                            </VirtualizingStackPanel>
                                        </DataTemplate>
                                    </ComboBox.Resources>

                                    <x:Static Member="FontWeights.Black"/>
                                    <x:Static Member="FontWeights.Bold"/>
                                    <x:Static Member="FontWeights.DemiBold"/>
                                    <x:Static Member="FontWeights.ExtraBlack"/>
                                    <x:Static Member="FontWeights.ExtraBold"/>
                                    <x:Static Member="FontWeights.ExtraLight"/>
                                    <x:Static Member="FontWeights.Heavy"/>
                                    <x:Static Member="FontWeights.Light"/>
                                    <x:Static Member="FontWeights.Medium"/>
                                    <x:Static Member="FontWeights.Normal"/>
                                    <x:Static Member="FontWeights.Regular"/>
                                    <x:Static Member="FontWeights.SemiBold"/>
                                    <x:Static Member="FontWeights.Thin"/>
                                    <x:Static Member="FontWeights.UltraBlack"/>
                                    <x:Static Member="FontWeights.UltraBold"/>
                                    <x:Static Member="FontWeights.UltraLight"/>
                                </ComboBox>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="3" Grid.Column="1" x:Name="TitleFrameFontSizeNumericUpDown" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=TitleFrameFontSize}"/>

                                <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <Border Grid.Row="4" Grid.Column="1" x:Name="TitleFrameFontColor" Height="26" Margin="10,5" Cursor="Hand" BorderBrush="#FFABABAB" BorderThickness="1"
                                        Background="{Binding TitleFrameFontColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}, Mode=TwoWay}" 
                                        MouseLeftButtonDown="TitleFrameFontColor_MouseLeftButtonDown"/>
                            </Grid>

                            <Label Grid.Row="4" Content="{DynamicResource String.Delay}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="5" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Column="0" Content="{DynamicResource String.DelayMs}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Column="1" x:Name="TitleFrameDelayNumericUpDown" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=TitleFrameDelay}"/>
                            </Grid>

                            <Label Grid.Row="6" Content="{DynamicResource Caption.Layout}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="7" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="TitleFrameVerticalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="110"
                                          SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=CaptionVerticalAligment}">
                                    <x:Static Member="VerticalAlignment.Top"/>
                                    <x:Static Member="VerticalAlignment.Center"/>
                                    <x:Static Member="VerticalAlignment.Bottom"/>
                                </ComboBox>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="TitleFrameHorizontalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" 
                                          SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=CaptionHorizontalAligment}">
                                    <x:Static Member="HorizontalAlignment.Left"/>
                                    <x:Static Member="HorizontalAlignment.Center"/>
                                    <x:Static Member="HorizontalAlignment.Right"/>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource String.Margin}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="2" Grid.Column="1" x:Name="TitleFrameMarginNumericUpDown" Minimum="-100" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=TitleFrameMargin}"/>
                            </Grid>

                            <Label Grid.Row="8" Content="{DynamicResource String.Background}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="9" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <Border Grid.Row="0" Grid.Column="1" x:Name="TitleFrameBackgroundColor" Height="26" Margin="10,5" Cursor="Hand" BorderBrush="#FFABABAB" BorderThickness="1"
                                        Background="{Binding TitleFrameBackgroundColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}, Mode=TwoWay}" 
                                        MouseLeftButtonDown="TitleFrameBackgroundColor_MouseLeftButtonDown" MinWidth="100"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="FreeDrawingGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource FreeDrawing.Mode}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="PenModeRadioButton" Content="{StaticResource Vector.Pen}" 
                                                    Text="{DynamicResource FreeDrawing.Pen}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5" IsChecked="True"/>
                                <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="EraserModeRadioButton" Content="{StaticResource Vector.Eraser}" 
                                                    Text="{DynamicResource FreeDrawing.Eraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                                <n:ImageRadioButton Grid.Row="1" Grid.Column="0" x:Name="SelectorModeRadioButton" Content="{StaticResource Vector.Select}" 
                                                    Text="{DynamicResource FreeDrawing.Select}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                                <n:ImageRadioButton Grid.Row="1" Grid.Column="1" x:Name="EraserStrokeModeRadioButton" Content="{StaticResource Vector.StrokeEraser}" 
                                                    Text="{DynamicResource FreeDrawing.StrokeEraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                            </Grid>

                            <Label Grid.Row="2" Content="{DynamicResource FreeDrawing.Pen}" Style="{StaticResource LabelSeparator}" 
                                   Visibility="{Binding ElementName=PenModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2VisibilityConverter}}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0" 
                                  Visibility="{Binding ElementName=PenModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2VisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="0" Grid.Column="1" x:Name="FreeDrawingWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=FreeDrawingPenWidth, Mode=TwoWay}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="1" Grid.Column="1" x:Name="FreeDrawingHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=FreeDrawingPenHeight, Mode=TwoWay}"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <Border Grid.Row="2" Grid.Column="1" x:Name="FreeDrawingColorBorder" Height="26" Margin="10,5" Cursor="Hand" BorderBrush="#FFABABAB" BorderThickness="1"
                                        Background="{Binding FreeDrawingColor, Source={x:Static h:Settings.Default}, Converter={StaticResource ColorToBrush}}" 
                                        MouseLeftButtonDown="FreeDrawingColorBorder_MouseLeftButtonDown"/>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                                <Grid Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="RectangleRadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingStylusTip, Source={x:Static h:Settings.Default}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="EllipseRadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingStylusTip, Source={x:Static h:Settings.Default}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                                </Grid>

                                <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource FreeDrawing.Other}" VerticalAlignment="Center" Padding="0"/>
                                <CheckBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" x:Name="IsHighLighterCheckBox" Content="{DynamicResource FreeDrawing.Highlighter}" Margin="5"
                                          IsChecked="{Binding Source={x:Static h:Settings.Default}, Path=FreeDrawingIsHighlighter}"/>
                                <CheckBox Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2" x:Name="FitToCurveCheckBox" Content="{DynamicResource FreeDrawing.FitToCurve}" Margin="5"
                                          IsChecked="{Binding Source={x:Static h:Settings.Default}, Path=FreeDrawingFitToCurve}"/>
                            </Grid>

                            <Label Grid.Row="4" Content="{DynamicResource FreeDrawing.Eraser}" Style="{StaticResource LabelSeparator}"
                                   Visibility="{Binding ElementName=EraserModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2VisibilityConverter}}"/>
                            <Grid Grid.Row="5" Margin="10,0,0,0"
                                  Visibility="{Binding ElementName=EraserModeRadioButton, Path=IsChecked, Converter={StaticResource Bool2VisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="0" Grid.Column="1" x:Name="FreeDrawingEraserWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                             Value="{Binding Source={x:Static h:Settings.Default}, Path=FreeDrawingEraserWidth}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="1" Grid.Column="1" x:Name="FreeDrawingEraserHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                             Value="{Binding Source={x:Static h:Settings.Default}, Path=FreeDrawingEraserHeight}"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                                <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="RectangleEraserRadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingEraserStylusTip, Source={x:Static h:Settings.Default}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="ElipseEraserRadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding FreeDrawingEraserStylusTip, Source={x:Static h:Settings.Default}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Grid x:Name="WatermarkGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Watermark.Image}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" MinHeight="35"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Watermark.File}" VerticalAlignment="Center" Padding="0"/>
                                <TextBlock Grid.Row="0" Grid.Column="1" x:Name="ImagePathLabel" Margin="3" Padding="0" FontStyle="Italic" Foreground="#FF09012B" VerticalAlignment="Center"
                                           Text="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkFilePath, Converter={StaticResource PathToFilenameConverter}}" TextWrapping="WrapWithOverflow"
                                           ToolTip="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkFilePath}" ToolTipService.Placement="Top" ToolTipService.HorizontalOffset="-5"/>
                                <n:ImageButton Grid.Row="1" Grid.Column="2" x:Name="SelectWatermarkButton" Content="{StaticResource Vector.Image}" MaxSize="20" Text="{DynamicResource FreeDrawing.Select}" 
                                               Margin="5,3" MinWidth="70" Padding="2,5" Click="SelectWatermark_Click"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Watermark.Opacity}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" x:Name="OpacityWatermarkNumericUpDown" 
                                                 Minimum="1" Maximum="100" Margin="10,5" Width="70" HorizontalAlignment="Left"
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkOpacity, 
                                                 Converter={StaticResource DoubleTimesAHundredToIntConverter}, Mode=TwoWay, FallbackValue=70}"/>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" x:Name="SizeWatermarkNumericUpDown" 
                                                 Minimum="1" Maximum="200" Margin="10,5" Width="70" HorizontalAlignment="Left"
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkSize, 
                                                 Converter={StaticResource DoubleTimesAHundredToIntConverter}, Mode=TwoWay, FallbackValue=100}"/>
                            </Grid>

                            <Label Grid.Row="2" Content="{DynamicResource Caption.Layout}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="WatermarkVerticalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="110"
                                          SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkVerticalAligment}">
                                    <x:Static Member="VerticalAlignment.Top"/>
                                    <x:Static Member="VerticalAlignment.Center"/>
                                    <x:Static Member="VerticalAlignment.Bottom"/>
                                </ComboBox>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="WatermarkHorizontalAligmentComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" 
                                          SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkHorizontalAligment}">
                                    <x:Static Member="HorizontalAlignment.Left"/>
                                    <x:Static Member="HorizontalAlignment.Center"/>
                                    <x:Static Member="HorizontalAlignment.Right"/>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource String.Margin}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="2" Grid.Column="1" x:Name="WatermarkMarginNumericUpDown" Minimum="-100" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=WatermarkMargin}"/>
                            </Grid>
                        </Grid>
                        <Grid x:Name="BorderGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Border.Appearance}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <Border Grid.Row="0" Grid.Column="1" x:Name="BorderColorBorder" Height="26" Margin="10,5" Cursor="Hand" BorderBrush="#FFABABAB" BorderThickness="1"
                                        Background="{Binding BorderColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}, Mode=TwoWay}" 
                                        MouseLeftButtonDown="BorderColor_MouseLeftButtonDown" MinWidth="100"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"/>
                                <Grid Grid.Row="1" Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <Viewbox Grid.Column="0" Child="{StaticResource Vector.Arrow.Blue.Top}" MaxWidth="15" MaxHeight="15"/>
                                        <n:NumericUpDown Grid.Column="1" x:Name="BorderTopThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                         Value="{Binding Source={x:Static h:Settings.Default}, Path=BorderTopThickness, Mode=TwoWay}"/>
                                    </Grid>

                                    <Viewbox Grid.Row="1" Grid.Column="0" Child="{StaticResource Vector.Arrow.Blue.Left}" MaxWidth="15" MaxHeight="15" Margin="5,0,0,0"/>
                                    <n:NumericUpDown Grid.Row="1" Grid.Column="1" x:Name="BorderLeftThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                     Value="{Binding Source={x:Static h:Settings.Default}, Path=BorderLeftThickness, Mode=TwoWay}"/>

                                    <Viewbox Grid.Row="1" Grid.Column="3" Child="{StaticResource Vector.Arrow.Blue.Right}" MaxWidth="15" MaxHeight="15"/>
                                    <n:NumericUpDown Grid.Row="1" Grid.Column="2" x:Name="BorderRightThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                     Value="{Binding Source={x:Static h:Settings.Default}, Path=BorderRightThickness, Mode=TwoWay}"/>

                                    <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="4" HorizontalAlignment="Center">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>

                                        <Viewbox Grid.Column="0" Child="{StaticResource Vector.Arrow.Blue.Bottom}" MaxWidth="15" MaxHeight="15"/>
                                        <n:NumericUpDown Grid.Column="1" x:Name="BorderBottomThicknessNumericUpDown" Minimum="0" Maximum="10" Margin="3,5" Width="55" 
                                                         Value="{Binding Source={x:Static h:Settings.Default}, Path=BorderBottomThickness, Mode=TwoWay}"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Grid x:Name="ProgressGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="23"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="23"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="23"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Progress.Type}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ImageRadioButton Grid.Column="0" x:Name="BarRadioButton" Content="{StaticResource Vector.Progress}" Text="{DynamicResource Progress.Type.Bar}" 
                                                    IsChecked="{Binding ProgressType, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToBool}, 
                                                    ConverterParameter={x:Static u:ProgressType.Bar}}"/>

                                <n:ImageRadioButton Grid.Column="1" x:Name="TextRadioButton" Content="{StaticResource Vector.FreeText}" Text="{StaticResource Progress.Type.Text}"
                                                    IsChecked="{Binding ProgressType, Source={x:Static h:Settings.Default}, Converter={StaticResource EnumToBool}, 
                                                    ConverterParameter={x:Static u:ProgressType.Text}}"/>
                            </Grid>

                            <Label Grid.Row="2" Content="{DynamicResource Caption.Font}" Style="{StaticResource LabelSeparator}"
                                   Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0" 
                                  Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2VisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Family}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="ProgressFontComboBox" Margin="10,5" MinWidth="100" MaxWidth="110"  IsEditable="True"
                                          ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=ProgressFontFamily}">
                                    <ComboBox.ItemsSource>
                                        <Binding Source="{StaticResource MyFonts}" />
                                    </ComboBox.ItemsSource>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling"/>
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Style}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="ProgressFontStyleComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" IsEditable="True"
                                      ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=ProgressFontStyle}">
                                    <ComboBox.Resources>
                                        <Style x:Key="FontStyle">
                                            <Setter Property="Control.FontStyle" Value="{Binding .}"/>
                                            <Setter Property="Control.FontSize" Value="14" />
                                        </Style>

                                        <DataTemplate x:Key="FontTemplate">
                                            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                <TextBlock Style="{StaticResource FontStyle}" Text="{Binding .}" />
                                            </VirtualizingStackPanel>
                                        </DataTemplate>
                                    </ComboBox.Resources>

                                    <x:Static Member="FontStyles.Normal"/>
                                    <x:Static Member="FontStyles.Italic"/>
                                    <x:Static Member="FontStyles.Oblique"/>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Weight}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="2" Grid.Column="1" x:Name="ProgressFontWeightComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" IsEditable="True"
                                          ItemTemplate="{DynamicResource FontTemplate}" SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=ProgressFontWeight}">
                                    <ComboBox.Resources>
                                        <Style x:Key="FontStyle">
                                            <Setter Property="Control.FontWeight" Value="{Binding .}"/>
                                            <Setter Property="Control.FontSize" Value="14" />
                                        </Style>

                                        <DataTemplate x:Key="FontTemplate">
                                            <VirtualizingStackPanel IsVirtualizing="True" VirtualizationMode="Recycling" ScrollViewer.IsDeferredScrollingEnabled="True">
                                                <TextBlock Style="{StaticResource FontStyle}" Text="{Binding .}" />
                                            </VirtualizingStackPanel>
                                        </DataTemplate>
                                    </ComboBox.Resources>

                                    <x:Static Member="FontWeights.Black"/>
                                    <x:Static Member="FontWeights.Bold"/>
                                    <x:Static Member="FontWeights.DemiBold"/>
                                    <x:Static Member="FontWeights.ExtraBlack"/>
                                    <x:Static Member="FontWeights.ExtraBold"/>
                                    <x:Static Member="FontWeights.ExtraLight"/>
                                    <x:Static Member="FontWeights.Heavy"/>
                                    <x:Static Member="FontWeights.Light"/>
                                    <x:Static Member="FontWeights.Medium"/>
                                    <x:Static Member="FontWeights.Normal"/>
                                    <x:Static Member="FontWeights.Regular"/>
                                    <x:Static Member="FontWeights.SemiBold"/>
                                    <x:Static Member="FontWeights.Thin"/>
                                    <x:Static Member="FontWeights.UltraBlack"/>
                                    <x:Static Member="FontWeights.UltraBold"/>
                                    <x:Static Member="FontWeights.UltraLight"/>
                                </ComboBox>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource Caption.Size}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="3" Grid.Column="1" x:Name="ProgressFontSizeNumericUpDown" Minimum="10" Maximum="1000" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=ProgressFontSize}"/>

                                <Label Grid.Row="4" Grid.Column="0" Content="{DynamicResource Caption.Color}" VerticalAlignment="Center" Padding="0"/>
                                <Border Grid.Row="4" Grid.Column="1" x:Name="ProgressFontColor" Height="26" Margin="10,5" Cursor="Hand" BorderBrush="#FFABABAB" BorderThickness="1"
                                        Background="{Binding ProgressFontColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}, Mode=TwoWay}" 
                                        MouseLeftButtonDown="ProgressFontColor_MouseLeftButtonDown"/>
                            </Grid>

                            <Label Grid.Row="4" Content="{DynamicResource Border.Appearance}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="5" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Color}" VerticalAlignment="Center" Padding="0"/>
                                <Border Grid.Row="0" Grid.Column="1" x:Name="ProgressColorBorder" Height="26" Margin="10,5" Cursor="Hand" BorderBrush="#FFABABAB" BorderThickness="1"
                                        Background="{Binding ProgressColor, Source={x:Static h:Settings.Default}, Converter={StaticResourceExtension ColorToBrush}, Mode=TwoWay}" 
                                        MouseLeftButtonDown="ProgressColor_MouseLeftButtonDown" MinWidth="100"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Progress.Precision}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="ProgressPrecisionComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" IsEditable="True"
                                          SelectedIndex="{Binding Source={x:Static h:Settings.Default}, Path=ProgressPrecision}"
                                          Visibility="{Binding IsChecked, ElementName=TextRadioButton, Converter={StaticResource Bool2VisibilityConverter}}">
                                    <ComboBoxItem Tag="1:10" Content="{DynamicResource Progress.Precision.Minutes}"/>
                                    <ComboBoxItem Tag="70s" Content="{DynamicResource Progress.Precision.Seconds}"/>
                                    <ComboBoxItem Tag="70.000ms" Content="{DynamicResource Progress.Precision.Miliseconds}"/>
                                    <ComboBoxItem Tag="50 %" Content="{DynamicResource Progress.Precision.Percentage}"/>
                                    <ComboBoxItem Tag="60" Content="{DynamicResource Progress.Precision.Count}"/>
                                    <ComboBoxItem Tag="60/120" Content="{DynamicResource Progress.Precision.CountTotal}"/>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Caption.Thickness}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                                <n:NumericUpDown Grid.Row="2" Grid.Column="1" x:Name="ProgressThicknessNumericUpDown" Minimum="1" Maximum="30" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding ProgressThickness, Source={x:Static h:Settings.Default}, Mode=TwoWay}"
                                                 Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                            </Grid>

                            <Label Grid.Row="6" Content="{DynamicResource Caption.Layout}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="7" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource Caption.Vertical}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="0" Grid.Column="1" x:Name="ProgressVerticalComboBox" Margin="10,5" MinWidth="100" MaxWidth="110"
                                      SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=ProgressVerticalAligment}">
                                    <x:Static Member="VerticalAlignment.Top"/>
                                    <x:Static Member="VerticalAlignment.Center"/>
                                    <x:Static Member="VerticalAlignment.Bottom"/>
                                </ComboBox>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource Caption.Horizontal}" VerticalAlignment="Center" Padding="0"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" x:Name="ProgressHorizontalComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" 
                                          SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=ProgressHorizontalAligment}">
                                    <x:Static Member="HorizontalAlignment.Left"/>
                                    <x:Static Member="HorizontalAlignment.Center"/>
                                    <x:Static Member="HorizontalAlignment.Right"/>
                                </ComboBox>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource Progress.Orientation}" VerticalAlignment="Center" Padding="0"
                                       Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2VisibilityConverter}}"/>
                                <ComboBox Grid.Row="2" Grid.Column="1" x:Name="ProgressOrientationComboBox" Margin="10,5" MinWidth="100" MaxWidth="110" 
                                          SelectedItem="{Binding Source={x:Static h:Settings.Default}, Path=ProgressOrientation}"
                                          Visibility="{Binding IsChecked, ElementName=BarRadioButton, Converter={StaticResource Bool2VisibilityConverter}}">
                                    <x:Static Member="Orientation.Horizontal"/>
                                    <x:Static Member="Orientation.Vertical"/>
                                </ComboBox>
                            </Grid>
                        </Grid>
                        <Grid x:Name="CinemagraphGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource FreeDrawing.Mode}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>

                                <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="PenMode2RadioButton" Content="{StaticResource Vector.Pen}" 
                                                    Text="{DynamicResource FreeDrawing.Pen}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5" IsChecked="True"/>
                                <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="EraserMode2RadioButton" Content="{StaticResource Vector.Eraser}" 
                                                    Text="{DynamicResource FreeDrawing.Eraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                                <n:ImageRadioButton Grid.Row="1" Grid.Column="0" x:Name="SelectorMode2RadioButton" Content="{StaticResource Vector.Select}" 
                                                    Text="{DynamicResource FreeDrawing.Select}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                                <n:ImageRadioButton Grid.Row="1" Grid.Column="1" x:Name="EraserStrokeMode2RadioButton" Content="{StaticResource Vector.StrokeEraser}" 
                                                    Text="{DynamicResource FreeDrawing.StrokeEraser}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                            </Grid>

                            <Label Grid.Row="2" Content="Pen" Style="{StaticResource LabelSeparator}" 
                                   Visibility="{Binding ElementName=PenMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2VisibilityConverter}}"/>
                            <Grid Grid.Row="3" Margin="10,0,0,0" 
                                  Visibility="{Binding ElementName=PenMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2VisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="0" Grid.Column="1" x:Name="CinemagraphWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=CinemagraphPenWidth}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="1" Grid.Column="1" x:Name="CinemagraphHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=CinemagraphPenHeight}"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                                <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="Rectangle2RadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphStylusTip, Source={x:Static h:Settings.Default}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="Ellipse2RadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphStylusTip, Source={x:Static h:Settings.Default}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                                </Grid>

                                <Label Grid.Row="3" Grid.Column="0" Content="{DynamicResource FreeDrawing.Other}" VerticalAlignment="Center" Padding="0"/>
                                <CheckBox Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" x:Name="FitToCurve2CheckBox" Content="Fit To Curve" Margin="5"
                                          IsChecked="{Binding Source={x:Static h:Settings.Default}, Path=CinemagraphFitToCurve}"/>
                            </Grid>

                            <Label Grid.Row="4" Content="{DynamicResource FreeDrawing.Eraser}" Style="{StaticResource LabelSeparator}"
                                   Visibility="{Binding ElementName=EraserMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2VisibilityConverter}}"/>
                            <Grid Grid.Row="5" Margin="10,0,0,0"
                                  Visibility="{Binding ElementName=EraserMode2RadioButton, Path=IsChecked, Converter={StaticResource Bool2VisibilityConverter}}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource FreeDrawing.Width}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="0" Grid.Column="1" x:Name="CinemagraphEraserWidthNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                             Value="{Binding Source={x:Static h:Settings.Default}, Path=CinemagraphEraserWidth}"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="{DynamicResource FreeDrawing.Height}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="1" Grid.Column="1" x:Name="CinemagraphEraserHeightNumericUpDown" Minimum="1" Maximum="100" Margin="10,5" MinWidth="70" 
                                             Value="{Binding Source={x:Static h:Settings.Default}, Path=CinemagraphEraserHeight}"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="{DynamicResource FreeDrawing.Tip}" VerticalAlignment="Center" Padding="0"/>
                                <Grid Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="0" x:Name="RectangleEraser2RadioButton" Content="{StaticResource Vector.Rectangle}" 
                                                        Text="{DynamicResource FreeDrawing.Rectangle}" Cursor="Hand" MaxSize="20" Margin="3,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphEraserStylusTip, Source={x:Static h:Settings.Default}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Rectangle}"/>
                                    <n:ImageRadioButton Grid.Row="0" Grid.Column="1" x:Name="ElipseEraser2RadioButton" Content="{StaticResource Vector.Ellipse}" 
                                                        Text="{DynamicResource FreeDrawing.Ellipse}" Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"
                                                        IsChecked="{Binding CinemagraphEraserStylusTip, Source={x:Static h:Settings.Default}, 
                                                        Converter={StaticResource StylusTipToBoolConverter}, ConverterParameter=Ellipse}"/>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Grid x:Name="OverrideDelayGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Delay.NewValue}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.DelayMs}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="0" Grid.Column="1" x:Name="NewDelayNumericUpDown" Minimum="10" Maximum="10000" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=PlaybackOverrideDelay}"/>

                                <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                    <Viewbox MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                    <Label Content="{DynamicResource Delay.Minimum10Ms}" Foreground="#FF289746" FontStyle="Italic" FontSize="11" Padding="3"/>
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <Grid x:Name="ChangeDelayGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Delay.DecreaseIncrease}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="{DynamicResource String.DelayMs}" VerticalAlignment="Center" Padding="0"/>
                                <n:NumericUpDown Grid.Row="0" Grid.Column="1" x:Name="ChangeDelayNumericUpDown" Minimum="-10000" Maximum="10000" Margin="10,5" MinWidth="80" 
                                                 Value="{Binding Source={x:Static h:Settings.Default}, Path=PlaybackChangeDelay}"/>

                                <StackPanel Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                                    <Viewbox MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                    <Label Content="{DynamicResource Delay.Minimum10Ms}" Foreground="#FF289746" FontStyle="Italic" FontSize="11" Padding="3"/>
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <Grid x:Name="FadeGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Transitions.Lenght}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,5,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Slider Grid.Row="0" Grid.Column="0" x:Name="FadeSlider" Minimum="1" Maximum="10" 
                                        AutoToolTipPlacement="TopLeft" SmallChange="1" 
                                        IsSnapToTickEnabled="True" Margin="0,10"/>

                                <Grid Grid.Row="2" Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                    <TextBlock Grid.Column="1" Text="{DynamicResource Transitions.Info}" Foreground="#FF289746" 
                                               FontStyle="Italic" FontSize="11" Padding="3" TextWrapping="WrapWithOverflow"/>
                                </Grid>
                            </Grid>
                        </Grid>
                        <Grid x:Name="SlideGrid" Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="27"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Label Grid.Row="0" Content="{DynamicResource Transitions.Lenght}" Style="{StaticResource LabelSeparator}"/>
                            <Grid Grid.Row="1" Margin="10,0,5,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Slider Grid.Row="0" Grid.Column="0" x:Name="SlideSlider" Minimum="1" Maximum="10" 
                                        AutoToolTipPlacement="TopLeft" SmallChange="1" 
                                        IsSnapToTickEnabled="True" Margin="0,10"/>

                                <Grid Grid.Row="1" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <n:ImageRadioButton Grid.Column="0" x:Name="FromRightRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5" IsChecked="True"/>

                                    <n:ImageRadioButton Grid.Column="1" x:Name="FromTopRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                                    <n:ImageRadioButton Grid.Column="2" x:Name="FromLeftRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>

                                    <n:ImageRadioButton Grid.Column="3" x:Name="FromBottomRadioButton" Content="{StaticResource Vector.Info}" 
                                                        Cursor="Hand" MaxSize="20" Margin="0,3" Padding="0,5"/>
                                </Grid>

                                <Grid Grid.Row="2" Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Viewbox Grid.Column="0" MinWidth="15" MaxHeight="15" Stretch="Uniform" Child="{StaticResource Vector.Info}" />
                                    <TextBlock Grid.Column="1" Text="{DynamicResource Transitions.Info}" Foreground="#FF289746" 
                                           FontStyle="Italic" FontSize="11" Padding="3" TextWrapping="WrapWithOverflow"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </ScrollViewer>

                <!--Save or Cancel-->
                <Grid Grid.Row="2" x:Name="ActionLowerGrid" Background="WhiteSmoke">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <n:ImageButton Grid.Column="0" x:Name="ApplyButton" Text="{DynamicResource Action.Apply}" Padding="10,5" MinWidth="90" MinHeight="20"
                                   Margin="5,5,5,5" MaxSize="20" Content="{StaticResource Vector.Ok}"/>

                    <n:ImageButton Grid.Column="1" x:Name="CancelButton" Text="{DynamicResource Action.Cancel}" Padding="10,5" MinWidth="90" MinHeight="20"
                                   Margin="5,5,5,5" MaxSize="20" Content="{StaticResource Vector.Cancel}">
                        <n:ImageButton.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard Storyboard="{StaticResource HidePanelStoryboard}" HandoffBehavior="Compose"/>
                                <BeginStoryboard Storyboard="{StaticResource HideOverlayGridStoryboard}" HandoffBehavior="Compose"/>
                            </EventTrigger>
                        </n:ImageButton.Triggers>
                    </n:ImageButton>
                </Grid>
            </Grid>
        </Grid>

        <!--Lower part of the Window-->
        <ListView Grid.Row="3" x:Name="FrameListView" Style="{DynamicResource FrameListBoxStyle}" BorderThickness="0,1,0,0" IsTabStop="False" Focusable="False"
                  SelectionChanged="FrameListView_SelectionChanged" KeyDown="FrameListView_OnKeyDown"
                  IsEnabled="{Binding Path=IsLoading, ElementName=EditorWindow, Converter={StaticResource InvertedBoolConverter}}"
                  Visibility="{Binding RelativeSource={RelativeSource Self}, Path=HasItems, Converter={StaticResource Bool2VisibilityConverter}}">
            <ListView.Resources>
                <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
                <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
                <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
                <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>

                <Style x:Key="FrameListBoxStyle" TargetType="{x:Type ListView}">
                    <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>

                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Horizontal" MinHeight="0" VirtualizationMode="Recycling" IsVirtualizing="True"/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListView}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" Padding="2" SnapsToDevicePixels="true">
                                    <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" CanContentScroll="True">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </ScrollViewer>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                        <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsGrouping" Value="true"/>
                                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!--TODO: Export frames-->
                <ContextMenu x:Key="FrameListContextMenu">
                    <n:ImageMenuItem Header="{DynamicResource Editor.List.Frame}" Image="{StaticResource Vector.Image}" MaxSize="16" IsHitTestVisible="False"/>
                    <Separator/>
                    <n:ImageMenuItem Header="{DynamicResource Editor.List.OpenImage}" Image="{StaticResource Vector.Image}" MaxSize="16" Command="u:Commands.OpenImage"/>
                </ContextMenu>
            </ListView.Resources>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="Item_PreviewMouseLeftButtonDown"/>
                    <Setter Property="ContextMenu" Value="{StaticResource FrameListContextMenu}"/>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <Border Grid.Row="4">
            <Grid x:Name="LowerStatusBar" Height="20" Background="#FFF1F1F1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="7"/>
                    <ColumnDefinition Width="200"/>
                </Grid.ColumnDefinitions>

                <Grid x:Name="StatusGrid" Grid.Column="0" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Label x:Name="StatusLabel" Grid.Column="0" Content="Status" Padding="0" VerticalContentAlignment="Center" Margin="5,0" Foreground="#FF3C3C3C"/>
                    <ProgressBar x:Name="StatusProgressBar" Grid.Column="1" Height="5" Width="200" Margin="2,0"/>
                    <Separator Grid.Column="2" Width="1" Margin="2"/>
                </Grid>

                <Grid Grid.Column="3" x:Name="InfoGrid" Visibility="{Binding ElementName=WelcomeGrid, Path=Visibility, Converter={StaticResource InvertedVisibilityConverter}}"
                      ToolTip="Total Count, Selection Count, Selection Index" ToolTipService.Placement="Bottom">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Separator Grid.Column="0" Width="1" Margin="3,2"/>

                    <Label Grid.Column="1" Content="{Binding ElementName=FrameListView, Path=Items.Count}" Padding="0" VerticalContentAlignment="Center" 
                           FontSize="14" Foreground="#FF00A000" Margin="3,0,3,0"/>
                    <Label Grid.Column="2" Content="{Binding ElementName=FrameListView, Path=SelectedItems.Count}" Padding="0" VerticalContentAlignment="Center" 
                           FontSize="14" Foreground="#FFC80000" Margin="3,0,3,0"/>
                    <Label Grid.Column="4" Content="{Binding ElementName=FrameListView, Path=SelectedIndex}" Padding="0" VerticalContentAlignment="Center" 
                           FontSize="14" Foreground="#FF0064C8" Margin="3,0,3,0"/>
                </Grid>

                <Separator Grid.Column="4" Width="1" Margin="3,2"/>

                <Grid x:Name="CommandGrid" Grid.Column="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>

                    <n:ImageButton Grid.Column="0" x:Name="FirstRepeatButton" Content="{StaticResource Vector.First.Green}" MaxSize="22"
                                   Width="40" Text="" Command="u:Commands.FirstFrame"
                                   ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                   ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageRepeatButton Grid.Column="1" x:Name="PreviousRepeatButton" Content="{StaticResource Vector.Previous.Green}" MaxSize="18"
                                         Width="40" Text="" Command="u:Commands.PreviousFrame"
                                         ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                         ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageButton Grid.Column="2" x:Name="PlayPauseButton" Content="{StaticResource Vector.Play}" MaxSize="15"
                                   Width="40" Command="u:Commands.Play"
                                   ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                   ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageRepeatButton Grid.Column="3" x:Name="NextRepeatButton" Content="{StaticResource Vector.Next.Green}" MaxSize="18"
                                         Width="40" Command="u:Commands.NextFrame"
                                         ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                         ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                    <n:ImageButton Grid.Column="4" x:Name="LastRepeatButton" Content="{StaticResource Vector.Last.Green}" MaxSize="22"
                                   Width="40" Command="u:Commands.LastFrame"
                                   ToolTip="{Binding Command, RelativeSource={RelativeSource Self}, Converter={StaticResource CommandToInputGestureTextConverter}}" 
                                   ToolTipService.Placement="Bottom" ToolTipService.HorizontalOffset="-5"/>
                </Grid>
            </Grid>
        </Border>
    </Grid>
</Window>
